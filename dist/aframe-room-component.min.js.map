{"version":3,"file":"aframe-room-component.min.js","mappings":"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","sources":["webpack://aframe-room-component/webpack/universalModuleDefinition","webpack://aframe-room-component/./src/components/ceiling.js","webpack://aframe-room-component/./src/components/doorhole.js","webpack://aframe-room-component/./src/components/doorlink.js","webpack://aframe-room-component/./src/components/floor.js","webpack://aframe-room-component/./src/components/index.js","webpack://aframe-room-component/./src/components/room.js","webpack://aframe-room-component/./src/components/sides.js","webpack://aframe-room-component/./src/components/wall.js","webpack://aframe-room-component/./src/primitives/a-ceiling.js","webpack://aframe-room-component/./src/primitives/a-doorhole.js","webpack://aframe-room-component/./src/primitives/a-doorlink.js","webpack://aframe-room-component/./src/primitives/a-floor.js","webpack://aframe-room-component/./src/primitives/a-room.js","webpack://aframe-room-component/./src/primitives/a-sides.js","webpack://aframe-room-component/./src/primitives/a-wall.js","webpack://aframe-room-component/./src/primitives/index.js","webpack://aframe-room-component/./src/systems/building.js","webpack://aframe-room-component/./src/systems/index.js","webpack://aframe-room-component/webpack/bootstrap","webpack://aframe-room-component/./src/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, () => {\nreturn ","'use strict';\n\nconst DOORLINK = 'a-doorlink';\nconst ROOM = 'a-room';\n\nmodule.exports.Component = AFRAME.registerComponent('ceiling', {\n  init: function () {\n    console.info('initializing ceiling');\n\n    const parentName = this.el.parentEl?.localName;\n    if (parentName !== DOORLINK && parentName !== ROOM) {\n      const message = `a-ceiling elements must have an \"${DOORLINK}\" or \"${ROOM}\" parent`;\n      throw new Error(message);\n    }\n  }\n});\n","'use strict';\n\nconst WALL = 'a-wall';\n\nmodule.exports.Component = AFRAME.registerComponent('doorhole', {\n  init: function () {\n    console.info('initializing doorhole');\n\n    const parentName = this.el.parentEl?.localName;\n    if (parentName !== WALL) {\n      const message = `a-doorhole elements must have an \"${WALL}\" parent`;\n      throw new Error(message);\n    }\n\n    this.el.verts = [];\n    this.el.getDoorlink = () => this.el.sceneEl.querySelector(`a-doorlink[from=\"#${this.el.id}\"], a-doorlink[to=\"#${this.el.id}\"]`);\n  }\n});\n","'use strict';\n\nconst SCENE = 'a-scene';\nconst WALL = 'a-wall';\n\nmodule.exports.Component = AFRAME.registerComponent('doorlink', {\n  schema: {\n    from: { type: 'selector' },\n    to: { type: 'selector' },\n    height: { type: 'number', default: 2.0 },\n    width: { type: 'number', default: 0.8 }\n  },\n  init: function () {\n    console.info('initializing doorlink');\n\n    const parentName = this.el.parentEl?.localName;\n    if (parentName !== SCENE && parentName !== WALL) {\n      const message = `a-doorlink elements must have an \"${SCENE}\" or \"${WALL}\" parent`;\n      throw new Error(message);\n    }\n\n    const doorlinkEl = this.el;\n    doorlinkEl.ceiling = doorlinkEl.querySelector('a-ceiling');\n    doorlinkEl.floor = doorlinkEl.querySelector('a-floor');\n    doorlinkEl.sides = doorlinkEl.querySelector('a-sides');\n  },\n  update: function () {\n    console.info('updating doorlink');\n    this.el.sceneEl.systems?.building?.buildDoorlink(this.el);\n  }\n});\n","'use strict';\n\nconst DOORLINK = 'a-doorlink';\nconst ROOM = 'a-room';\n\nmodule.exports.Component = AFRAME.registerComponent('floor', {\n  init: function () {\n    console.info('initializing floor');\n\n    const parentName = this.el.parentEl?.localName;\n    if (parentName !== DOORLINK && parentName !== ROOM) {\n      const message = `a-floor elements must have an \"${DOORLINK}\" or \"${ROOM}\" parent`;\n      throw new Error(message);\n    }\n  }\n});\n","'use strict';\n\nrequire('./ceiling');\nrequire('./doorhole');\nrequire('./doorlink');\nrequire('./floor');\nrequire('./room');\nrequire('./sides');\nrequire('./wall');\n","'use strict';\n\nmodule.exports.Component = AFRAME.registerComponent('room', {\n  schema: {\n    outside: { type: 'boolean' },\n    height: { type: 'number', default: 2.4 },\n    width: { type: 'number' },\n    length: { type: 'number' }\n  },\n  init: function () {\n    console.info('initializing room');\n\n    const roomEl = this.el;\n    const { length, width } = roomEl?.getAttribute('room');\n    const walls = Array.from(roomEl.querySelectorAll('a-wall'));\n\n    if ((width || length) && !(width && length)) {\n      const message = 'rooms with WIDTH must also have LENGTH (and vice versa)';\n      console.error(message);\n      throw new Error(message);\n    }\n\n    if (width && length && walls.length !== 4) {\n      const message = 'rooms with WIDTH and LENGTH must have four walls!';\n      console.error(message);\n      throw new Error(message);\n    }\n\n    roomEl.ceiling = roomEl.querySelector('a-ceiling');\n    roomEl.floor = roomEl.querySelector('a-floor');\n    roomEl.walls = walls;\n  },\n  update: function () {\n    console.info('updating room');\n    this.el.sceneEl.systems?.building?.buildRoom(this.el);\n  }\n});\n","'use strict';\n\nconst DOORLINK = 'a-doorlink';\n\nmodule.exports.Component = AFRAME.registerComponent('sides', {\n  init: function () {\n    console.info('initializing sides');\n\n    const parentName = this.el.parentEl?.localName;\n    if (parentName !== DOORLINK) {\n      const message = `a-sides elements must have an \"${DOORLINK}\" parent`;\n      throw new Error(message);\n    }\n  }\n});\n","'use strict';\n\nconst ROOM = 'a-room';\n\nmodule.exports.Component = AFRAME.registerComponent('wall', {\n  schema: {\n    height: { type: 'number' }\n  },\n  init: function () {\n    console.info('initializing wall');\n\n    const parentName = this.el.parentEl?.localName;\n    if (parentName !== ROOM) {\n      const message = `a-wall elements must have an \"${ROOM}\" parent`;\n      throw new Error(message);\n    }\n\n    const doorholes = Array.from(this.el.querySelectorAll('a-doorhole'));\n    this.el.doorholes = doorholes.sort((a, b) => a?.object3D?.position?.x - b?.object3D?.position?.x);\n\n    this.el.getHeight = () => this.el.getAttribute('wall')?.height || this.el.parentEl?.getAttribute('room')?.height;\n  }\n});\n","'use strict';\n\nAFRAME.registerPrimitive('a-ceiling', {\n  defaultComponents: { ceiling: {} },\n  mappings: {}\n});\n","'use strict';\n\nAFRAME.registerPrimitive('a-doorhole', {\n  defaultComponents: { doorhole: {} },\n  mappings: {}\n});\n","'use strict';\n\nAFRAME.registerPrimitive('a-doorlink', {\n  defaultComponents: { doorlink: {} },\n  mappings: {\n    from: 'doorlink.from',\n    to: 'doorlink.to',\n    height: 'doorlink.height',\n    width: 'doorlink.width'\n  }\n});\n","'use strict';\n\nAFRAME.registerPrimitive('a-floor', {\n  defaultComponents: { floor: {} },\n  mappings: {}\n});\n","'use strict';\n\nAFRAME.registerPrimitive('a-room', {\n  defaultComponents: { room: {} },\n  mappings: {\n    outside: 'room.outside',\n    height: 'room.height',\n    width: 'room.width',\n    length: 'room.length'\n  }\n});\n","'use strict';\n\nAFRAME.registerPrimitive('a-sides', {\n  defaultComponents: { sides: {} },\n  mappings: {}\n});\n","'use strict';\n\nAFRAME.registerPrimitive('a-wall', {\n  defaultComponents: { wall: {} },\n  mappings: {\n    height: 'wall.height'\n  }\n});\n","'use strict';\n\nrequire('./a-ceiling');\nrequire('./a-doorhole');\nrequire('./a-doorlink');\nrequire('./a-floor');\nrequire('./a-room');\nrequire('./a-sides');\nrequire('./a-wall');\n","'use strict';\n\nconst HAIR = 0.0001;\n\nconst flipGeometry = (geom) => {\n  const indices = geom.getIndex().array;\n  for (let i = 0; i < indices.length; i += 3) {\n    const tempIndex = indices[i + 2];\n    indices[i + 2] = indices[i + 1];\n    indices[i + 1] = tempIndex;\n  }\n\n  geom.getIndex().needsUpdate = true;\n};\n\nconst makeGeometryUvs = (geom, callback) => {\n  const indices = geom.getIndex().array;\n  const uvs = [];\n  for (const vertexIndex of indices) {\n    const vertex = new THREE.Vector3(\n      geom.attributes.position.getX(vertexIndex),\n      geom.attributes.position.getY(vertexIndex),\n      geom.attributes.position.getZ(vertexIndex)\n    );\n\n    const [u, v] = callback(vertex, vertexIndex % 3);\n    uvs[vertexIndex * 2 + 0] = u;\n    uvs[vertexIndex * 2 + 1] = v;\n  }\n\n  geom.setAttribute('uv', new THREE.BufferAttribute(new Float32Array(uvs), 2));\n};\n\nconst makePlaneUvs = (geom, uKey, vKey, uMult, vMult) => {\n  makeGeometryUvs(geom, (point) => {\n    return [\n      point[uKey] * uMult,\n      point[vKey] * vMult\n    ];\n  });\n};\n\nconst finishGeometry = (geom) => {\n  geom.computeVertexNormals();\n  geom.computeBoundingBox();\n  geom.computeBoundingSphere();\n};\n\nconst addWorldVert = (wall, hole, ptX, ptY) => {\n  const tempPos = new THREE.Vector3(ptX, ptY, 0);\n  wall.object3D.localToWorld(tempPos);\n  hole.verts.push(tempPos);\n};\n\nconst positionDoorhole = (doorholeEl) => {\n  const doorlinkEl = doorholeEl.getDoorlink();\n  const wallEl = doorholeEl.parentEl;\n  const nextWallEl = wallEl?.nextWallEl;\n  if (!doorlinkEl || !nextWallEl) { return; }\n\n  const wallWorldPosition = new THREE.Vector3();\n  wallEl.object3D.getWorldPosition(wallWorldPosition);\n\n  const nextWallWorldPosition = new THREE.Vector3();\n  nextWallEl.object3D.getWorldPosition(nextWallWorldPosition);\n\n  const doorlinkWorldPosition = new THREE.Vector3();\n  doorlinkEl.object3D.getWorldPosition(doorlinkWorldPosition);\n\n  const doorlinkGapX = doorlinkWorldPosition.x - wallWorldPosition.x;\n  const doorlinkGapZ = doorlinkWorldPosition.z - wallWorldPosition.z;\n\n  const wallGapX = nextWallWorldPosition.x - wallWorldPosition.x;\n  const wallGapZ = nextWallWorldPosition.z - wallWorldPosition.z;\n\n  const wallAngle = Math.atan2(wallGapZ, wallGapX);\n  const wallLength = Math.sqrt(wallGapX * wallGapX + wallGapZ * wallGapZ);\n\n  const doorHalf = doorlinkEl.getAttribute('doorlink')?.width / 2;\n\n  let localLinkX = doorlinkGapX * Math.cos(-wallAngle) - doorlinkGapZ * Math.sin(-wallAngle);\n  localLinkX = Math.max(localLinkX, doorHalf + HAIR);\n  localLinkX = Math.min(localLinkX, wallLength - doorHalf - HAIR);\n\n  // var localLinkZ = doorlinkGapX*Math.sin(-wallAngle) + doorlinkGapZ*Math.cos(-wallAngle);\n\n  doorholeEl.object3D.position.set(localLinkX, 0, 0);\n};\n\nconst sortWalls = (walls, isOutside) => {\n  let cwSum = 0;\n  for (let i = 0; i < walls.length; i++) {\n    const wallEl = walls[i];\n    const nextWallEl = walls[(i + 1) % walls.length];\n\n    const { x: wallX, z: wallZ } = wallEl.object3D.position;\n    const { x: nextWallX, z: nextWallZ } = nextWallEl.object3D.position;\n\n    cwSum += (nextWallX - wallX) * (nextWallZ + wallZ);\n  }\n\n  let shouldReverse = false;\n  if (cwSum > 0) { shouldReverse = !shouldReverse; }\n  if (isOutside) { shouldReverse = !shouldReverse; }\n  if (shouldReverse) { walls.reverse(); }\n};\n\nconst buildCap = (walls, cap, isCeiling, isOutside) => {\n  const capShape = new THREE.Shape();\n  for (let i = 0; i < walls.length; i++) {\n    const wallEl = walls[i];\n    const ptX = wallEl.object3D.position.x;\n    const ptZ = wallEl.object3D.position.z;\n    if (i) {\n      capShape.lineTo(ptX, ptZ);\n    } else {\n      capShape.moveTo(ptX, ptZ);\n    }\n  }\n\n  const capGeom = new THREE.ShapeGeometry(capShape);\n  for (let i = 0; i < walls.length; i++) {\n    const wallEl = walls[i];\n    const curVert = new THREE.Vector3(\n      capGeom.attributes.position.getX(i),\n      capGeom.attributes.position.getY(i),\n      capGeom.attributes.position.getZ(i)\n    );\n    curVert.set(curVert.x, wallEl.object3D.position.y, curVert.y);\n    if (isCeiling) { curVert.y += wallEl.getHeight(); }\n    capGeom.attributes.position.setXYZ(i, curVert.x, curVert.y, curVert.z);\n  }\n\n  let shouldReverse = false;\n  if (!isCeiling) { shouldReverse = !shouldReverse; }\n  if (isOutside) { shouldReverse = !shouldReverse; }\n  if (shouldReverse) { flipGeometry(capGeom); }\n\n  makePlaneUvs(capGeom, 'x', 'z', isCeiling ? 1 : -1, 1);\n  finishGeometry(capGeom);\n\n  if (!cap.myMeshes) { cap.myMeshes = []; }\n\n  const typeLabel = isCeiling ? 'ceiling' : 'floor';\n  const myMat = cap?.components?.material?.material || cap?.parentEl?.components?.material?.material;\n  if (cap.myMeshes[typeLabel]) {\n    cap.myMeshes[typeLabel].geometry = capGeom;\n    cap.myMeshes[typeLabel].material = myMat;\n  } else {\n    cap.myMeshes[typeLabel] = new THREE.Mesh(capGeom, myMat);\n    cap.setObject3D(typeLabel, cap.myMeshes[typeLabel]);\n  }\n};\n\nconst buildRoom = (roomEl) => {\n  const { outside, length, width } = roomEl?.getAttribute('room');\n  const walls = roomEl?.walls;\n\n  if (width && length) {\n    walls[0].object3D.position.set(0, 0, 0);\n    walls[1].object3D.position.set(width, 0, 0);\n    walls[2].object3D.position.set(width, 0, length);\n    walls[3].object3D.position.set(0, 0, length);\n  }\n\n  sortWalls(walls, outside);\n\n  // build walls\n  for (let i = 0; i < walls.length; i++) {\n    const wallEl = walls[i];\n    const nextWallEl = wallEl.nextWallEl = walls[(i + 1) % walls.length];\n\n    const wallGapX = nextWallEl.object3D.position.x - wallEl.object3D.position.x;\n    const wallGapY = nextWallEl.object3D.position.y - wallEl.object3D.position.y;\n    const wallGapZ = nextWallEl.object3D.position.z - wallEl.object3D.position.z;\n\n    const heightGap = nextWallEl.getHeight() - wallEl.getHeight();\n    const wallAngle = Math.atan2(wallGapZ, wallGapX);\n    const wallLength = Math.sqrt(wallGapX * wallGapX + wallGapZ * wallGapZ);\n\n    wallEl.object3D.rotation.y = THREE.MathUtils.degToRad(-wallAngle / Math.PI * 180);\n\n    const wallShape = new THREE.Shape();\n    wallShape.moveTo(0, wallEl.getHeight());\n    wallShape.lineTo(0, 0);\n\n    // build doorholes\n    for (const doorholeEl of wallEl.doorholes) {\n      positionDoorhole(doorholeEl);\n\n      const doorlinkEl = doorholeEl.getDoorlink();\n      if (!doorlinkEl) { continue; }\n\n      for (let holeSide = -1; holeSide <= 1; holeSide += 2) {\n        const ptX = doorholeEl.object3D.position.x + doorlinkEl.getAttribute('doorlink').width / 2 * holeSide;\n        const floorY = (ptX / wallLength) * wallGapY;\n        let topY = floorY + doorlinkEl.getAttribute('doorlink').height;\n\n        const curCeil = wallEl.getHeight() + (ptX / wallLength) * heightGap;\n        const maxTopY = floorY + curCeil - HAIR;// will always be a seam, but, I'm not bothering to rewrite just for that\n        if (topY > maxTopY) { topY = maxTopY; }\n\n        addWorldVert(wallEl, doorholeEl, ptX, floorY);\n        addWorldVert(wallEl, doorholeEl, ptX, topY);\n\n        if (holeSide < 0) {\n          wallShape.lineTo(ptX, floorY);\n          wallShape.lineTo(ptX, topY);\n        } else {\n          wallShape.lineTo(ptX, topY);\n          wallShape.lineTo(ptX, floorY);\n        }\n      }\n    }\n\n    wallShape.lineTo(\n      wallLength,\n      nextWallEl?.object3D?.position?.y - wallEl?.object3D?.position?.y\n    );\n    wallShape.lineTo(\n      wallLength,\n      (nextWallEl?.object3D?.position?.y - wallEl?.object3D?.position?.y) + nextWallEl.getHeight()\n    );\n\n    const wallGeom = new THREE.ShapeGeometry(wallShape);\n    makePlaneUvs(wallGeom, 'x', 'y', 1, 1);\n    finishGeometry(wallGeom);\n    const myMat = wallEl?.components?.material?.material || wallEl?.parentEl?.components?.material?.material;\n    if (wallEl.myMesh) {\n      wallEl.myMesh.geometry = wallGeom;\n      wallEl.myMesh.material = myMat;\n    } else {\n      wallEl.myMesh = new THREE.Mesh(wallGeom, myMat);\n      wallEl.setObject3D('wallMesh', wallEl.myMesh);\n    }\n  }\n\n  // build ceiling and floor\n  buildCap(walls, roomEl?.floor, false, outside);\n  buildCap(walls, roomEl?.ceiling, true, outside);\n};\n\nconst buildDoorlink = (doorlinkEl) => {\n  const { from, to } = doorlinkEl.getAttribute('doorlink');\n  const fromVerts = from?.verts;\n  const toVerts = to?.verts;\n  if (!fromVerts || !toVerts) { return; }\n\n  for (const doorLinkChild of doorlinkEl.children) {\n    if (!doorLinkChild.components) { continue; }\n\n    const types = ['sides', 'floor', 'ceiling'];\n    for (const curType of types) {\n      if (!doorLinkChild.components[curType]) { continue; }\n\n      const myMat = doorLinkChild?.components?.material?.material || doorLinkChild?.parentEl?.components?.material?.material;\n\n      if (!doorLinkChild.myGeoms) { doorLinkChild.myGeoms = []; }\n      if (!doorLinkChild.myGeoms[curType]) {\n        const curGeom = new THREE.BufferGeometry();\n        doorLinkChild.myGeoms[curType] = curGeom;\n        const myMesh = new THREE.Mesh(curGeom, myMat);\n        curGeom.meshRef = myMesh;\n        doorLinkChild.setObject3D(curType, myMesh);\n        const indexArray = [];\n        indexArray.push(0, 1, 2, 1, 3, 2);\n        if (curType === 'sides') { indexArray.push(4, 5, 6, 5, 7, 6); }\n        curGeom.setIndex(indexArray);\n      }\n\n      const curGeom = doorLinkChild.myGeoms[curType];\n      curGeom.meshRef.material = myMat;\n      const positionArray = [];\n\n      const addWorldVertex = (vertex) => {\n        const point = vertex.clone();\n        doorLinkChild.object3D.worldToLocal(point);\n        positionArray.push(point.x, point.y, point.z);\n      };\n\n      const commitVertices = () => {\n        curGeom.setAttribute('position', new THREE.BufferAttribute(new Float32Array(positionArray), 3));\n      };\n\n      switch (curType) {\n        case 'floor':\n\n          addWorldVertex(toVerts[0]);\n          addWorldVertex(toVerts[2]);\n          addWorldVertex(fromVerts[2]);\n          addWorldVertex(fromVerts[0]);\n\n          commitVertices();\n\n          makeGeometryUvs(curGeom, (point, vertIndex) => {\n            return [\n              1 - (vertIndex % 2),\n              1 - Math.floor(vertIndex / 2)\n            ];\n          });\n\n          break;\n        case 'ceiling':\n\n          addWorldVertex(toVerts[3]);\n          addWorldVertex(toVerts[1]);\n          addWorldVertex(fromVerts[1]);\n          addWorldVertex(fromVerts[3]);\n\n          commitVertices();\n\n          makeGeometryUvs(curGeom, (point, vertIndex) => {\n            return [\n              vertIndex % 2,\n              1 - Math.floor(vertIndex / 2)\n            ];\n          });\n\n          break;\n        case 'sides':\n\n          addWorldVertex(toVerts[2]);\n          addWorldVertex(toVerts[3]);\n          addWorldVertex(fromVerts[0]);\n          addWorldVertex(fromVerts[1]);\n\n          addWorldVertex(fromVerts[2]);\n          addWorldVertex(fromVerts[3]);\n          addWorldVertex(toVerts[0]);\n          addWorldVertex(toVerts[1]);\n\n          commitVertices();\n\n          makeGeometryUvs(curGeom, (point, vertIndex) => {\n            const uv = [];\n            uv[0] = Math.floor(vertIndex / 2);\n            uv[1] = vertIndex % 2;\n            if (vertIndex < 4) { uv[0] = 1 - uv[0]; }\n            return uv;\n          });\n\n          break;\n      }\n      finishGeometry(curGeom);\n    }\n  }\n};\n\nAFRAME.registerSystem('building', {\n  init: function () {\n    console.log('initializing building');\n\n    this.el.rooms = this.el.querySelectorAll('a-room');\n    this.el.doorlinks = this.el.querySelectorAll('a-doorlink');\n    this.el.updateReady = false;\n\n    this.el.addEventListener('loaded', this.initialBuild);\n  },\n  initialBuild: function () {\n    console.info('building...');\n\n    this.object3D.updateMatrixWorld();\n\n    for (const roomEl of this.rooms) {\n      buildRoom(roomEl);\n    }\n\n    for (const doorlinkEl of this.doorlinks) {\n      buildDoorlink(doorlinkEl);\n    }\n\n    this.updateReady = true;\n  },\n  buildRoom: function (roomEl) {\n    if (this.el.updateReady) buildRoom(roomEl);\n  },\n  buildDoorlink: function (doorlinkEl) {\n    if (this.el.updateReady) buildDoorlink(doorlinkEl);\n  }\n});\n","'use strict';\n\nrequire('./building');\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","'use strict';\n\nrequire('./components');\nrequire('./primitives');\nrequire('./systems');\n"],"names":["root","factory","exports","module","define","amd","a","i","self","DOORLINK","ROOM","Component","AFRAME","registerComponent","init","_this$el$parentEl","console","info","parentName","this","el","parentEl","localName","message","concat","Error","WALL","_this","verts","getDoorlink","sceneEl","querySelector","id","SCENE","schema","from","type","to","height","default","width","doorlinkEl","ceiling","floor","sides","update","_this$el$sceneEl$syst","_this$el$sceneEl$syst2","systems","building","buildDoorlink","require","outside","length","roomEl","_roomEl$getAttribute","getAttribute","walls","Array","querySelectorAll","error","buildRoom","doorholes","sort","b","_a$object3D","_a$object3D$position","_b$object3D","_b$object3D$position","object3D","position","x","getHeight","_this$el$getAttribute","_this$el$parentEl2","_this$el$parentEl2$ge","registerPrimitive","defaultComponents","mappings","doorhole","doorlink","room","wall","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","isArray","_unsupportedIterableToArray","F","s","n","done","value","e","_e2","f","TypeError","err","normalCompletion","didErr","call","step","next","_e3","minLen","_arrayLikeToArray","Object","prototype","toString","slice","constructor","name","test","arr","len","arr2","HAIR","makeGeometryUvs","geom","callback","_step","uvs","_iterator","getIndex","array","vertexIndex","_callback2","THREE","Vector3","attributes","getX","getY","getZ","_arrayWithHoles","_i","_s","_e","_x","_r","_arr","_n","_d","push","_iterableToArrayLimit","_nonIterableRest","u","v","setAttribute","BufferAttribute","Float32Array","makePlaneUvs","uKey","vKey","uMult","vMult","point","finishGeometry","computeVertexNormals","computeBoundingBox","computeBoundingSphere","addWorldVert","hole","ptX","ptY","tempPos","localToWorld","positionDoorhole","doorholeEl","_doorlinkEl$getAttrib","wallEl","nextWallEl","wallWorldPosition","getWorldPosition","nextWallWorldPosition","doorlinkWorldPosition","doorlinkGapX","doorlinkGapZ","z","wallGapX","wallGapZ","wallAngle","Math","atan2","wallLength","sqrt","doorHalf","localLinkX","cos","sin","max","min","set","buildCap","cap","isCeiling","isOutside","_cap$components","_cap$components$mater","_cap$parentEl","_cap$parentEl$compone","_cap$parentEl$compone2","capShape","Shape","ptZ","lineTo","moveTo","capGeom","ShapeGeometry","curVert","y","setXYZ","shouldReverse","indices","tempIndex","needsUpdate","flipGeometry","myMeshes","typeLabel","myMat","components","material","geometry","Mesh","setObject3D","cwSum","_wallEl$object3D$posi","wallX","wallZ","_nextWallEl$object3D$","reverse","sortWalls","_nextWallEl$object3D","_nextWallEl$object3D$2","_wallEl$object3D","_wallEl$object3D$posi2","_nextWallEl$object3D2","_nextWallEl$object3D3","_wallEl$object3D2","_wallEl$object3D2$pos","_wallEl$components","_wallEl$components$ma","_wallEl$parentEl","_wallEl$parentEl$comp","_wallEl$parentEl$comp2","wallGapY","heightGap","rotation","MathUtils","degToRad","PI","wallShape","_step2","_iterator2","holeSide","floorY","topY","maxTopY","wallGeom","myMesh","_doorlinkEl$getAttrib2","fromVerts","toVerts","_step3","_iterator3","children","_loop","doorLinkChild","_loop2","_doorLinkChild$compon","_doorLinkChild$compon2","_doorLinkChild$parent","_doorLinkChild$parent2","_doorLinkChild$parent3","curType","_types","_i3","myGeoms","curGeom","BufferGeometry","meshRef","indexArray","setIndex","positionArray","addWorldVertex","vertex","clone","worldToLocal","commitVertices","vertIndex","uv","registerSystem","log","rooms","doorlinks","updateReady","addEventListener","initialBuild","updateMatrixWorld","_step4","_iterator4","_step5","_iterator5","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__"],"sourceRoot":""}