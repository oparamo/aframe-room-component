{"version":3,"file":"aframe-room-component.min.js","mappings":"CAAA,SAA2CA,EAAMC,GAChD,GAAsB,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,SACb,GAAqB,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,OACP,CACJ,IAAIK,EAAIL,IACR,IAAI,IAAIM,KAAKD,GAAuB,iBAAZJ,QAAuBA,QAAUF,GAAMO,GAAKD,EAAEC,EACvE,CACA,CATD,CASGC,MAAM,I,kCCPT,IAAMC,EAAW,aACXC,EAAO,SAEbP,EAAOD,QAAQS,UAAYC,OAAOC,kBAAkB,UAAW,CAC7DC,KAAM,WAAY,IAAAC,EACVC,EAA6B,QAAnBD,EAAGE,KAAKC,GAAGC,gBAAQ,IAAAJ,OAAA,EAAhBA,EAAkBK,UACrC,GAAIJ,IAAeP,GAAYO,IAAeN,EAAM,CAClD,IAAMW,EAAU,qCAAHC,OAAwCb,EAAQ,UAAAa,OAASZ,EAAI,MAC1E,MAAM,IAAIa,MAAMF,EAClB,CACF,G,UCVF,IAAMG,EAAO,SAEbrB,EAAOD,QAAQS,UAAYC,OAAOC,kBAAkB,WAAY,CAC9DC,KAAM,WAAY,IAAAC,EAAAU,EAAA,KAEhB,IADmC,QAAnBV,EAAGE,KAAKC,GAAGC,gBAAQ,IAAAJ,OAAA,EAAhBA,EAAkBK,aAClBI,EAAM,CACvB,IAAMH,EAAU,sCAAHC,OAAyCE,EAAI,MAC1D,MAAM,IAAID,MAAMF,EAClB,CAEAJ,KAAKC,GAAGQ,SAAW,GACnBT,KAAKC,GAAGS,YAAc,kBAAMF,EAAKP,GAAGU,QAAQC,cAAc,qBAADP,OAAsBG,EAAKP,GAAGY,GAAE,wBAAAR,OAAuBG,EAAKP,GAAGY,GAAE,MAAK,CACjI,G,UCZF,IAAMC,EAAQ,UACRP,EAAO,SAEbrB,EAAOD,QAAQS,UAAYC,OAAOC,kBAAkB,WAAY,CAC9DmB,OAAQ,CACNC,KAAM,CAAEC,KAAM,YACdC,GAAI,CAAED,KAAM,YACZE,OAAQ,CAAEF,KAAM,SAAUG,QAAS,GACnCC,MAAO,CAAEJ,KAAM,SAAUG,QAAS,KAEpCvB,KAAM,WAAY,IAAAC,EACVC,EAA6B,QAAnBD,EAAGE,KAAKC,GAAGC,gBAAQ,IAAAJ,OAAA,EAAhBA,EAAkBK,UACrC,GAAIJ,IAAee,GAASf,IAAeQ,EAAM,CAC/C,IAAMH,EAAU,sCAAHC,OAAyCS,EAAK,UAAAT,OAASE,EAAI,MACxE,MAAM,IAAID,MAAMF,EAClB,CACF,EACAkB,OAAQ,WAAY,IAAAC,EAAAC,EACK,QAAvBD,EAAAvB,KAAKC,GAAGU,QAAQc,eAAO,IAAAF,GAAU,QAAVC,EAAvBD,EAAyBG,gBAAQ,IAAAF,GAAjCA,EAAmCG,cAAc3B,KAAKC,GACxD,G,UCnBF,IAAMT,EAAW,aACXC,EAAO,SAEbP,EAAOD,QAAQS,UAAYC,OAAOC,kBAAkB,QAAS,CAC3DC,KAAM,WAAY,IAAAC,EACVC,EAA6B,QAAnBD,EAAGE,KAAKC,GAAGC,gBAAQ,IAAAJ,OAAA,EAAhBA,EAAkBK,UACrC,GAAIJ,IAAeP,GAAYO,IAAeN,EAAM,CAClD,IAAMW,EAAU,mCAAHC,OAAsCb,EAAQ,UAAAa,OAASZ,EAAI,MACxE,MAAM,IAAIa,MAAMF,EAClB,CACF,G,eCVFwB,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,I,UCNR1C,EAAOD,QAAQS,UAAYC,OAAOC,kBAAkB,OAAQ,CAC1DmB,OAAQ,CACNc,QAAS,CAAEZ,KAAM,WACjBE,OAAQ,CAAEF,KAAM,SAAUG,QAAS,KACnCC,MAAO,CAAEJ,KAAM,UACfa,OAAQ,CAAEb,KAAM,WAElBpB,KAAM,WACJ,IAAMkC,EAAS/B,KAAKC,GACpB+B,EAA0BD,aAAM,EAANA,EAAQE,aAAa,QAAvCH,EAAME,EAANF,OAAQT,EAAKW,EAALX,MACVa,EAAQC,MAAMnB,KAAKe,EAAOK,iBAAiB,WAEjD,IAAKf,GAASS,MAAaT,IAASS,GAAS,CAC3C,IAAM1B,EAAU,8DAEhB,MADAiC,QAAQC,MAAMlC,GACR,IAAIE,MAAMF,EAClB,CAEA,GAAIiB,GAASS,GAA2B,IAAjBI,EAAMJ,OAAc,CACzC,IAAM1B,EAAU,uDAEhB,MADAiC,QAAQC,MAAMlC,GACR,IAAIE,MAAMF,EAClB,CAEA2B,EAAOQ,QAAUR,EAAOnB,cAAc,aACtCmB,EAAOS,MAAQT,EAAOnB,cAAc,WACpCmB,EAAOG,MAAQA,CACjB,EACAZ,OAAQ,WAAY,IAAAC,EAAAC,EACK,QAAvBD,EAAAvB,KAAKC,GAAGU,QAAQc,eAAO,IAAAF,GAAU,QAAVC,EAAvBD,EAAyBG,gBAAQ,IAAAF,GAAjCA,EAAmCiB,UAAUzC,KAAKC,GACpD,G,UC9BF,IAAMT,EAAW,aAEjBN,EAAOD,QAAQS,UAAYC,OAAOC,kBAAkB,QAAS,CAC3DC,KAAM,WAAY,IAAAC,EAEhB,IADmC,QAAnBA,EAAGE,KAAKC,GAAGC,gBAAQ,IAAAJ,OAAA,EAAhBA,EAAkBK,aAClBX,EAAU,CAC3B,IAAMY,EAAU,mCAAHC,OAAsCb,EAAQ,MAC3D,MAAM,IAAIc,MAAMF,EAClB,CACF,G,UCTF,IAAMX,EAAO,SAEbP,EAAOD,QAAQS,UAAYC,OAAOC,kBAAkB,OAAQ,CAC1DmB,OAAQ,CACNI,OAAQ,CAAEF,KAAM,WAElBpB,KAAM,WAAY,IAAAC,EAAAU,EAAA,KAEhB,IADmC,QAAnBV,EAAGE,KAAKC,GAAGC,gBAAQ,IAAAJ,OAAA,EAAhBA,EAAkBK,aAClBV,EAAM,CACvB,IAAMW,EAAU,kCAAHC,OAAqCZ,EAAI,KACtD,MAAM,IAAIa,MAAMF,EAClB,CAEA,IAAMsC,EAAYP,MAAMnB,KAAKhB,KAAKC,GAAGmC,iBAAiB,eACtDpC,KAAKC,GAAGyC,UAAYA,EAAUC,MAAK,SAACtD,EAAGuD,GAAC,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAK3D,SAAW,QAAVwD,EAADxD,EAAG4D,gBAAQ,IAAAJ,GAAU,QAAVC,EAAXD,EAAaK,gBAAQ,IAAAJ,OAApB,EAADA,EAAuBK,IAAIP,SAAW,QAAVG,EAADH,EAAGK,gBAAQ,IAAAF,GAAU,QAAVC,EAAXD,EAAaG,gBAAQ,IAAAF,OAApB,EAADA,EAAuBG,EAAC,IAEhGnD,KAAKC,GAAGmD,UAAY,eAAAC,EAAAC,EAAAC,EAAA,OAAkC,QAA5BF,EAAA7C,EAAKP,GAAGgC,aAAa,eAAO,IAAAoB,OAAA,EAA5BA,EAA8BlC,UAA0B,QAApBmC,EAAI9C,EAAKP,GAAGC,gBAAQ,IAAAoD,GAAsB,QAAtBC,EAAhBD,EAAkBrB,aAAa,eAAO,IAAAsB,OAAtB,EAAhBA,EAAwCpC,OAAM,CAClH,G,WCjBFxB,OAAO6D,kBAAkB,YAAa,CACpCC,kBAAmB,CAAElB,QAAS,CAAC,GAC/BmB,SAAU,CAAC,G,WCFb/D,OAAO6D,kBAAkB,aAAc,CACrCC,kBAAmB,CAAEE,SAAU,CAAC,GAChCD,SAAU,CAAC,G,WCFb/D,OAAO6D,kBAAkB,aAAc,CACrCC,kBAAmB,CAAEG,SAAU,CAAC,GAChCF,SAAU,CACR1C,KAAM,gBACNE,GAAI,cACJC,OAAQ,kBACRE,MAAO,mB,WCNX1B,OAAO6D,kBAAkB,UAAW,CAClCC,kBAAmB,CAAEjB,MAAO,CAAC,GAC7BkB,SAAU,CAAC,G,WCFb/D,OAAO6D,kBAAkB,SAAU,CACjCC,kBAAmB,CAAEI,KAAM,CAAC,GAC5BH,SAAU,CACR7B,QAAS,eACTV,OAAQ,cACRE,MAAO,aACPS,OAAQ,gB,WCNZnC,OAAO6D,kBAAkB,UAAW,CAClCC,kBAAmB,CAAEK,MAAO,CAAC,GAC7BJ,SAAU,CAAC,G,WCFb/D,OAAO6D,kBAAkB,SAAU,CACjCC,kBAAmB,CAAEM,KAAM,CAAC,GAC5BL,SAAU,CACRvC,OAAQ,gB,gBCHZS,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,I,gBCRK,SAAAoC,EAAAC,EAAAC,GAAA,IAAAC,EAAA,oBAAAC,QAAAH,EAAAG,OAAAC,WAAAJ,EAAA,kBAAAE,EAAA,IAAAhC,MAAAmC,QAAAL,KAAAE,EAAA,SAAAF,EAAAM,GAAA,GAAAN,EAAA,qBAAAA,EAAA,OAAAO,EAAAP,EAAAM,GAAA,IAAAE,EAAAC,OAAAC,UAAAC,SAAAC,KAAAZ,GAAAa,MAAA,uBAAAL,GAAAR,EAAAc,cAAAN,EAAAR,EAAAc,YAAAC,MAAA,QAAAP,GAAA,QAAAA,EAAAtC,MAAAnB,KAAAiD,GAAA,cAAAQ,GAAA,2CAAAQ,KAAAR,GAAAD,EAAAP,EAAAM,QAAA,GAAAW,CAAAjB,KAAAC,GAAAD,GAAA,iBAAAA,EAAAnC,OAAA,CAAAqC,IAAAF,EAAAE,GAAA,IAAA7E,EAAA,EAAA6F,EAAA,oBAAAC,EAAAD,EAAAV,EAAA,kBAAAnF,GAAA2E,EAAAnC,OAAA,CAAAuD,MAAA,IAAAA,MAAA,EAAAC,MAAArB,EAAA3E,KAAA,EAAAiG,EAAA,SAAAC,GAAA,MAAAA,CAAA,EAAAC,EAAAN,EAAA,WAAAO,UAAA,6IAAAC,EAAAC,GAAA,EAAAC,GAAA,SAAAT,EAAA,WAAAjB,EAAAA,EAAAU,KAAAZ,EAAA,EAAAQ,EAAA,eAAAqB,EAAA3B,EAAA4B,OAAA,OAAAH,EAAAE,EAAAT,KAAAS,CAAA,EAAAP,EAAA,SAAAS,GAAAH,GAAA,EAAAF,EAAAK,CAAA,EAAAP,EAAA,eAAAG,GAAA,MAAAzB,EAAA,QAAAA,EAAA,oBAAA0B,EAAA,MAAAF,CAAA,aAAAnB,EAAAyB,EAAAC,IAAA,MAAAA,GAAAA,EAAAD,EAAAnE,UAAAoE,EAAAD,EAAAnE,QAAA,QAAAxC,EAAA,EAAA6G,EAAA,IAAAhE,MAAA+D,GAAA5G,EAAA4G,EAAA5G,IAAA6G,EAAA7G,GAAA2G,EAAA3G,GAAA,OAAA6G,CAAA,CAEb,IAAAC,EAAqCxE,EAAQ,KAArCD,EAAayE,EAAbzE,cAAec,EAAS2D,EAAT3D,UAEvB9C,OAAO0G,eAAe,WAAY,CAChCxG,KAAM,WACJG,KAAKC,GAAGqG,iBAAiB,SAAUtG,KAAKuG,cACxCvG,KAAKC,GAAGuG,aAAc,CACxB,EACAD,aAAc,WACZ,IAAME,EAAYzG,KAAKoC,iBAAiB,cAClCsE,EAAQ1G,KAAKoC,iBAAiB,UAEpCpC,KAAKiD,SAAS0D,oBAAoB,IAERC,EAFQC,EAAA7C,EAEb0C,GAAK,IAA1B,IAAAG,EAAAzB,MAAAwB,EAAAC,EAAApC,KAAAY,MAA4B,KAAjBtD,EAAM6E,EAAAtB,MACf7C,EAAUV,EACZ,CAAC,OAAA4D,GAAAkB,EAAAtB,EAAAI,EAAA,SAAAkB,EAAApB,GAAA,KAEiCqB,EAFjCC,EAAA/C,EAEwByC,GAAS,IAAlC,IAAAM,EAAA3B,MAAA0B,EAAAC,EAAAtC,KAAAY,MAAoC,KAAzB2B,EAAUF,EAAAxB,MACnB3D,EAAcqF,EAChB,CAAC,OAAArB,GAAAoB,EAAAxB,EAAAI,EAAA,SAAAoB,EAAAtB,GAAA,CAEDzF,KAAKwG,aAAc,CACrB,EACA/D,UAAW,SAAUV,GACf/B,KAAKC,GAAGuG,aAAa/D,EAAUV,EACrC,EACAJ,cAAe,SAAUqF,GACnBhH,KAAKC,GAAGuG,aAAa7E,EAAcqF,EACzC,G,UC9BW,SAAAhD,EAAAC,EAAAC,GAAA,IAAAC,EAAA,oBAAAC,QAAAH,EAAAG,OAAAC,WAAAJ,EAAA,kBAAAE,EAAA,IAAAhC,MAAAmC,QAAAL,KAAAE,EAAAe,EAAAjB,KAAAC,GAAAD,GAAA,iBAAAA,EAAAnC,OAAA,CAAAqC,IAAAF,EAAAE,GAAA,IAAA7E,EAAA,EAAA6F,EAAA,oBAAAC,EAAAD,EAAAV,EAAA,kBAAAnF,GAAA2E,EAAAnC,OAAA,CAAAuD,MAAA,IAAAA,MAAA,EAAAC,MAAArB,EAAA3E,KAAA,EAAAiG,EAAA,SAAAS,GAAA,MAAAA,CAAA,EAAAP,EAAAN,EAAA,WAAAO,UAAA,6IAAAC,EAAAC,GAAA,EAAAC,GAAA,SAAAT,EAAA,WAAAjB,EAAAA,EAAAU,KAAAZ,EAAA,EAAAQ,EAAA,eAAAqB,EAAA3B,EAAA4B,OAAA,OAAAH,EAAAE,EAAAT,KAAAS,CAAA,EAAAP,EAAA,SAAA0B,GAAApB,GAAA,EAAAF,EAAAsB,CAAA,EAAAxB,EAAA,eAAAG,GAAA,MAAAzB,EAAA,QAAAA,EAAA,oBAAA0B,EAAA,MAAAF,CAAA,aAAAT,EAAAjB,EAAAM,GAAA,GAAAN,EAAA,qBAAAA,EAAA,OAAAO,EAAAP,EAAAM,GAAA,IAAAE,EAAAC,OAAAC,UAAAC,SAAAC,KAAAZ,GAAAa,MAAA,uBAAAL,GAAAR,EAAAc,cAAAN,EAAAR,EAAAc,YAAAC,MAAA,QAAAP,GAAA,QAAAA,EAAAtC,MAAAnB,KAAAiD,GAAA,cAAAQ,GAAA,2CAAAQ,KAAAR,GAAAD,EAAAP,EAAAM,QAAA,YAAAC,EAAAyB,EAAAC,IAAA,MAAAA,GAAAA,EAAAD,EAAAnE,UAAAoE,EAAAD,EAAAnE,QAAA,QAAAxC,EAAA,EAAA6G,EAAA,IAAAhE,MAAA+D,GAAA5G,EAAA4G,EAAA5G,IAAA6G,EAAA7G,GAAA2G,EAAA3G,GAAA,OAAA6G,CAAA,CAEb,IAAMe,EAAO,KAaPC,EAAkB,SAACC,EAAMC,GAC7B,IAEiCT,EAlBtBX,EAAA3G,EAiBLgI,EAAM,GAAGT,EAAA7C,EADCoD,EAAKG,WAAWC,OAEC,IAAjC,IAAAX,EAAAzB,MAAAwB,EAAAC,EAAApC,KAAAY,MAAmC,KAAxBoC,EAAWb,EAAAtB,MAO4BoC,GAzBvCzB,EAyBMoB,EANA,IAAIM,MAAMC,QACvBR,EAAKS,WAAW3E,SAAS4E,KAAKL,GAC9BL,EAAKS,WAAW3E,SAAS6E,KAAKN,GAC9BL,EAAKS,WAAW3E,SAAS8E,KAAKP,IAGAA,EAAc,GAzBrCnI,EAyBuC,EAzBvC,SAAA2G,GAAA,GAAA9D,MAAAmC,QAAA2B,GAAA,OAAAA,CAAA,CAAAgC,CAAAhC,IAAA,SAAAA,EAAA3G,GAAA,IAAA4I,EAAA,MAAAjC,EAAA,yBAAA7B,QAAA6B,EAAA7B,OAAAC,WAAA4B,EAAA,uBAAAiC,EAAA,KAAAC,EAAA3C,EAAA4C,EAAAC,EAAAC,EAAA,GAAAC,GAAA,EAAAC,GAAA,SAAAJ,GAAAF,EAAAA,EAAArD,KAAAoB,IAAAF,KAAA,IAAAzG,EAAA,IAAAoF,OAAAwD,KAAAA,EAAA,OAAAK,GAAA,cAAAA,GAAAJ,EAAAC,EAAAvD,KAAAqD,IAAA7C,QAAAiD,EAAAG,KAAAN,EAAA7C,OAAAgD,EAAAxG,SAAAxC,GAAAiJ,GAAA,UAAA5C,GAAA6C,GAAA,EAAAhD,EAAAG,CAAA,iBAAA4C,GAAA,MAAAL,EAAA,SAAAG,EAAAH,EAAA,SAAAxD,OAAA2D,KAAAA,GAAA,kBAAAG,EAAA,MAAAhD,CAAA,SAAA8C,CAAA,EAAAI,CAAAzC,EAAA3G,IAAA4F,EAAAe,EAAA3G,IAAA,qBAAAoG,UAAA,6IAAAiD,IAyBFC,EAAClB,EAAA,GAAEmB,EAACnB,EAAA,GACXJ,EAAkB,EAAdG,EAAkB,GAAKmB,EAC3BtB,EAAkB,EAAdG,EAAkB,GAAKoB,CAC7B,CAAC,OAAAlD,GAAAkB,EAAAtB,EAAAI,EAAA,SAAAkB,EAAApB,GAAA,CAED2B,EAAK0B,aAAa,KAAM,IAAInB,MAAMoB,gBAAgB,IAAIC,aAAa1B,GAAM,GAC3E,EAEM2B,EAAe,SAAC7B,EAAM8B,EAAMC,EAAMC,EAAOC,GAE7ClC,EAAgBC,GADC,SAACkC,GAAK,MAAM,CAACA,EAAMJ,GAAQE,EAAOE,EAAMH,GAAQE,EAAM,GAEzE,EAEME,EAAiB,SAACnC,GACtBA,EAAKoC,sBAGP,EAEMC,EAAyB,SAACC,EAAQC,EAAiBC,GACvD,IAAMN,EAAQI,EAAOG,QACrBF,EAAgB1G,SAAS6G,aAAaR,GACtCM,EAAUnB,KAAKa,EAAMnG,EAAGmG,EAAMS,EAAGT,EAAMU,EACzC,EAEMC,EAAyB,SAAClG,EAAMJ,EAAUuG,EAAKC,GACnD,IAAMT,EAAS,IAAI/B,MAAMC,QAAQsC,EAAKC,EAAK,GAC3CpG,EAAKd,SAASmH,aAAaV,GAC3B/F,EAASlD,SAASgI,KAAKiB,EACzB,EAEMW,EAAmB,SAACC,GAAe,IAAAC,EACjCvD,EAAasD,EAAW5J,cACxB8J,EAASF,EAAWpK,SACpBuK,EAAaD,aAAM,EAANA,EAAQC,WAC3B,GAAKzD,GAAeyD,EAApB,CAEA,IAAMC,EAAoB,IAAI/C,MAAMC,QACpC4C,EAAOvH,SAAS0H,iBAAiBD,GAEjC,IAAME,EAAwB,IAAIjD,MAAMC,QACxC6C,EAAWxH,SAAS0H,iBAAiBC,GAErC,IAAMC,EAAwB,IAAIlD,MAAMC,QACxCZ,EAAW/D,SAAS0H,iBAAiBE,GAErC,IAAMC,EAAeD,EAAsB1H,EAAIuH,EAAkBvH,EAC3D4H,EAAeF,EAAsBb,EAAIU,EAAkBV,EAE3DgB,EAAWJ,EAAsBzH,EAAIuH,EAAkBvH,EACvD8H,EAAWL,EAAsBZ,EAAIU,EAAkBV,EAEvDkB,EAAYC,KAAKC,MAAMH,EAAUD,GACjCK,EAAaF,KAAKG,KAAKN,EAAWA,EAAWC,EAAWA,GAExDM,GAA8C,QAAnChB,EAAAvD,EAAW/E,aAAa,mBAAW,IAAAsI,OAAA,EAAnCA,EAAqClJ,OAAQ,EAE1DmK,EAAaV,EAAeK,KAAKM,KAAKP,GAAaH,EAAeI,KAAKO,KAAKR,GAChFM,EAAaL,KAAKQ,IAAIH,EAAYD,EAAWrE,GAC7CsE,EAAaL,KAAKS,IAAIJ,EAAYH,EAAaE,EAAWrE,GAG1DoD,EAAWrH,SAASC,SAAS2I,IAAIL,EAAY,EAAG,EA3BN,CA4B5C,EAoBMM,EAAW,SAAC5J,EAAO6J,EAAKC,EAAWC,GAEvC,IAFqD,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAC/CC,EAAQ,IAAI5E,MAAM6E,MACflN,EAAI,EAAGA,EAAI4C,EAAMJ,OAAQxC,IAAK,CACrC,IAAMkL,EAAStI,EAAM5C,GACf4K,EAAMM,EAAOvH,SAASC,SAASC,EAC/BsJ,EAAMjC,EAAOvH,SAASC,SAAS8G,EACjC1K,EACFiN,EAAMG,OAAOxC,EAAKuC,GAElBF,EAAMI,OAAOzC,EAAKuC,EAEtB,CAGA,IADA,IAAMrF,EAAO,IAAIO,MAAMiF,cAAcL,GAC5BjN,EAAI,EAAGA,EAAI4C,EAAMJ,OAAQxC,IAAK,CACrC,IAAMkL,EAAStI,EAAM5C,GACfoK,EAAS,IAAI/B,MAAMC,QACvBR,EAAKS,WAAW3E,SAAS4E,KAAKxI,GAC9B8H,EAAKS,WAAW3E,SAAS6E,KAAKzI,GAC9B8H,EAAKS,WAAW3E,SAAS8E,KAAK1I,IAEhCoK,EAAOmC,IAAInC,EAAOvG,EAAGqH,EAAOvH,SAASC,SAAS6G,EAAGL,EAAOK,GACpDiC,IAAatC,EAAOK,GAAKS,EAAOpH,aACpCgE,EAAKS,WAAW3E,SAAS2J,OAAOvN,EAAGoK,EAAOvG,EAAGuG,EAAOK,EAAGL,EAAOM,EAChE,CAEA,IAAI8C,GAAgB,EACfd,IAAac,GAAiBA,GAC/Bb,IAAaa,GAAiBA,GAC9BA,GArIe,SAAC1F,GAEpB,IADA,IAAM2F,EAAU3F,EAAKG,WAAWC,MACvBlI,EAAI,EAAGA,EAAIyN,EAAQjL,OAAQxC,GAAK,EAAG,CAC1C,IAAM0N,EAAYD,EAAQzN,EAAI,GAC9ByN,EAAQzN,EAAI,GAAKyN,EAAQzN,EAAI,GAC7ByN,EAAQzN,EAAI,GAAK0N,CACnB,CAEA5F,EAAKG,WAAW0F,aAAc,CAChC,CA4HuBC,CAAa9F,GAElC6B,EAAa7B,EAAM,IAAK,IAAK4E,EAAY,GAAK,EAAG,GACjDzC,EAAenC,GAEf,IAAM+F,GAAWpB,SAAe,QAAZG,EAAHH,EAAKqB,kBAAU,IAAAlB,GAAU,QAAVC,EAAfD,EAAiBiB,gBAAQ,IAAAhB,OAAtB,EAAHA,EAA2BgB,YAAYpB,SAAa,QAAVK,EAAHL,EAAK7L,gBAAQ,IAAAkM,GAAY,QAAZC,EAAbD,EAAegB,kBAAU,IAAAf,GAAU,QAAVC,EAAzBD,EAA2Bc,gBAAQ,IAAAb,OAAhC,EAAHA,EAAqCa,UAC7F,GAAIpB,EAAIsB,KACNtB,EAAIsB,KAAKC,SAAWlG,EACpB2E,EAAIsB,KAAKF,SAAWA,MACf,CACL,IAAMI,EAAYvB,EAAY,UAAY,QAC1CD,EAAIsB,KAAO,IAAI1F,MAAM6F,KAAKpG,EAAM+F,GAChCpB,EAAI0B,YAAYF,EAAWxB,EAAIsB,KACjC,CACF,EAoKAnO,EAAOD,QAAU,CAAE0C,cA1EG,SAACqF,GACrB,IAAA0G,EAAqB1G,EAAW/E,aAAa,YAArCjB,EAAI0M,EAAJ1M,KAAME,EAAEwM,EAAFxM,GACRyM,EAAY3M,aAAI,EAAJA,EAAMP,SAClBmN,EAAU1M,aAAE,EAAFA,EAAIT,SACpB,GAAKkN,GAAcC,EAAnB,CAAuC,IAEUC,EAFVC,EAAA9J,EAETgD,EAAW+G,UAAQ,IAAjD,IAAAD,EAAA1I,MAAAyI,EAAAC,EAAArJ,KAAAY,MAEE,IAFiD,IAAxCsE,EAAekE,EAAAvI,MAExB0I,EAAA,EAAAC,EADc,CAAC,QAAS,QAAS,WACTD,EAAAC,EAAAnM,OAAAkM,IAAE,KAAAE,EAAAC,EAAAC,EAAAC,EAAAC,EAAfrN,EAAIgN,EAAAD,GACb,GAAKrE,EAAgByD,WAAWnM,GAAhC,CAEA,IAAMkM,GAAWxD,SAA2B,QAAZuE,EAAfvE,EAAiByD,kBAAU,IAAAc,GAAU,QAAVC,EAA3BD,EAA6Bf,gBAAQ,IAAAgB,OAAtB,EAAfA,EAAuChB,YAAYxD,SAAyB,QAAVyE,EAAfzE,EAAiBzJ,gBAAQ,IAAAkO,GAAY,QAAZC,EAAzBD,EAA2BhB,kBAAU,IAAAiB,GAAU,QAAVC,EAArCD,EAAuClB,gBAAQ,IAAAmB,OAAhC,EAAfA,EAAiDnB,UAE/GJ,EAAoB,UAAT9L,EAAoB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GACtFmG,EAAO,IAAIO,MAAM4G,eACvBnH,EAAKoH,SAASzB,GAEdpD,EAAgB0D,KAAO,IAAI1F,MAAM6F,KAAKpG,EAAM+F,GAC5CxD,EAAgB8D,YAAYxM,EAAM0I,EAAgB0D,MAElD,IAAMzD,EAAY,GAElB,OAAQ3I,GACN,IAAK,QACHwI,EAAuBmE,EAAQ,GAAIjE,EAAiBC,GACpDH,EAAuBmE,EAAQ,GAAIjE,EAAiBC,GACpDH,EAAuBkE,EAAU,GAAIhE,EAAiBC,GACtDH,EAAuBkE,EAAU,GAAIhE,EAAiBC,GAEtDxC,EAAK0B,aAAa,WAAY,IAAInB,MAAMoB,gBAAgB,IAAIC,aAAaY,GAAY,IAErFzC,EAAgBC,GAAM,SAACkC,EAAOmF,GAAS,MAAM,CAAC,EAAKA,EAAY,EAAI,EAAItD,KAAK3I,MAAMiM,EAAY,GAAG,IAEjG,MACF,IAAK,UACHhF,EAAuBmE,EAAQ,GAAIjE,EAAiBC,GACpDH,EAAuBmE,EAAQ,GAAIjE,EAAiBC,GACpDH,EAAuBkE,EAAU,GAAIhE,EAAiBC,GACtDH,EAAuBkE,EAAU,GAAIhE,EAAiBC,GAEtDxC,EAAK0B,aAAa,WAAY,IAAInB,MAAMoB,gBAAgB,IAAIC,aAAaY,GAAY,IAErFzC,EAAgBC,GAAM,SAACkC,EAAOmF,GAAS,MAAM,CAACA,EAAY,EAAG,EAAItD,KAAK3I,MAAMiM,EAAY,GAAG,IAE3F,MACF,IAAK,QACHhF,EAAuBmE,EAAQ,GAAIjE,EAAiBC,GACpDH,EAAuBmE,EAAQ,GAAIjE,EAAiBC,GACpDH,EAAuBkE,EAAU,GAAIhE,EAAiBC,GACtDH,EAAuBkE,EAAU,GAAIhE,EAAiBC,GAEtDH,EAAuBkE,EAAU,GAAIhE,EAAiBC,GACtDH,EAAuBkE,EAAU,GAAIhE,EAAiBC,GACtDH,EAAuBmE,EAAQ,GAAIjE,EAAiBC,GACpDH,EAAuBmE,EAAQ,GAAIjE,EAAiBC,GAEpDxC,EAAK0B,aAAa,WAAY,IAAInB,MAAMoB,gBAAgB,IAAIC,aAAaY,GAAY,IAErFzC,EAAgBC,GAAM,SAACkC,EAAOmF,GAC5B,IAAMC,EAAK,GAIX,OAHAA,EAAG,GAAKvD,KAAK3I,MAAMiM,EAAY,GAC/BC,EAAG,GAAKD,EAAY,EAChBA,EAAY,IAAKC,EAAG,GAAK,EAAIA,EAAG,IAC7BA,CACT,IAKJnF,EAAenC,EA5DoC,CA6DrD,CACD,OAAAzB,GAAAmI,EAAAvI,EAAAI,EAAA,SAAAmI,EAAArI,GAAA,CAnEqC,CAoExC,EAEkChD,UAlKhB,SAACV,GACjB,IAAAC,EAAmCD,aAAM,EAANA,EAAQE,aAAa,QAAhDJ,EAAOG,EAAPH,QAASC,EAAME,EAANF,OAAQT,EAAKW,EAALX,MACnBa,EAAQH,aAAM,EAANA,EAAQG,MAElBb,GAASS,IACXI,EAAM,GAAGe,SAASC,SAAS2I,IAAI,EAAG,EAAG,GACrC3J,EAAM,GAAGe,SAASC,SAAS2I,IAAIxK,EAAO,EAAG,GACzCa,EAAM,GAAGe,SAASC,SAAS2I,IAAIxK,EAAO,EAAGS,GACzCI,EAAM,GAAGe,SAASC,SAAS2I,IAAI,EAAG,EAAG/J,IAvEvB,SAACI,EAAO+J,GAExB,IADA,IAAI0C,EAAQ,EACHrP,EAAI,EAAGA,EAAI4C,EAAMJ,OAAQxC,IAAK,CACrC,IAAMkL,EAAStI,EAAM5C,GACfmL,EAAavI,GAAO5C,EAAI,GAAK4C,EAAMJ,QAEzC8M,EAA+BpE,EAAOvH,SAASC,SAApC2L,EAAKD,EAARzL,EAAa2L,EAAKF,EAAR5E,EAClB+E,EAAuCtE,EAAWxH,SAASC,SAE3DyL,IAFoBI,EAAZ5L,EAEc0L,IAFYE,EAAZ/E,EAEsB8E,EAC9C,CAEA,IAAIhC,GAAgB,EAChB6B,EAAQ,IAAK7B,GAAiBA,GAC9Bb,IAAaa,GAAiBA,GAC9BA,GAAiB5K,EAAM8M,SAC7B,CA0DEC,CAAU/M,EAAOL,GAGjB,IAAK,IAAIvC,EAAI,EAAGA,EAAI4C,EAAMJ,OAAQxC,IAAK,KAAA4P,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAC/BtF,EAAStI,EAAM5C,GACfmL,EAAaD,EAAOC,WAAavI,GAAO5C,EAAI,GAAK4C,EAAMJ,QAEvDkJ,EAAWP,EAAWxH,SAASC,SAASC,EAAIqH,EAAOvH,SAASC,SAASC,EACrE4M,EAAWtF,EAAWxH,SAASC,SAAS6G,EAAIS,EAAOvH,SAASC,SAAS6G,EACrEkB,EAAWR,EAAWxH,SAASC,SAAS8G,EAAIQ,EAAOvH,SAASC,SAAS8G,EAErEgG,EAAYvF,EAAWrH,YAAcoH,EAAOpH,YAC5C8H,EAAYC,KAAKC,MAAMH,EAAUD,GACjCK,EAAaF,KAAKG,KAAKN,EAAWA,EAAWC,EAAWA,GAE9DT,EAAOvH,SAASgN,SAASlG,EAAIpC,MAAMuI,UAAUC,UAAUjF,EAAYC,KAAKiF,GAAK,KAE7E,IAAMC,EAAY,IAAI1I,MAAM6E,MAC5B6D,EAAU1D,OAAO,EAAGnC,EAAOpH,aAC3BiN,EAAU3D,OAAO,EAAG,GAEpB,IACyC5F,EADzCC,EAAA/C,EACyBwG,EAAO9H,WAAS,IAAzC,IAAAqE,EAAA3B,MAAA0B,EAAAC,EAAAtC,KAAAY,MAA2C,KAAhCiF,EAAUxD,EAAAxB,MACnB+E,EAAiBC,GAEjB,IAAMtD,EAAasD,EAAW5J,cAC9B,GAAKsG,EAEL,IAAK,IAAIsJ,GAAY,EAAGA,GAAY,EAAGA,GAAY,EAAG,CACpD,IAAMpG,EAAMI,EAAWrH,SAASC,SAASC,EAAI6D,EAAW/E,aAAa,YAAYZ,MAAQ,EAAIiP,EACvFC,EAAUrG,EAAMmB,EAAc0E,EAChCS,EAAOD,EAASvJ,EAAW/E,aAAa,YAAYd,OAGlDsP,EAAUF,GADA/F,EAAOpH,YAAe8G,EAAMmB,EAAc2E,GACvB9I,EAC/BsJ,EAAOC,IAAWD,EAAOC,GAE7BxG,EAAuBO,EAAQF,EAAYJ,EAAKqG,GAChDtG,EAAuBO,EAAQF,EAAYJ,EAAKsG,GAE5CF,EAAW,GACbD,EAAU3D,OAAOxC,EAAKqG,GACtBF,EAAU3D,OAAOxC,EAAKsG,KAEtBH,EAAU3D,OAAOxC,EAAKsG,GACtBH,EAAU3D,OAAOxC,EAAKqG,GAE1B,CACF,CAAC,OAAA5K,GAAAoB,EAAAxB,EAAAI,EAAA,SAAAoB,EAAAtB,GAAA,CAED4K,EAAU3D,OACRrB,GACAZ,SAAoB,QAAVyE,EAAVzE,EAAYxH,gBAAQ,IAAAiM,GAAU,QAAVC,EAApBD,EAAsBhM,gBAAQ,IAAAiM,OAApB,EAAVA,EAAgCpF,IAAIS,SAAgB,QAAV4E,EAAN5E,EAAQvH,gBAAQ,IAAAmM,GAAU,QAAVC,EAAhBD,EAAkBlM,gBAAQ,IAAAmM,OAApB,EAANA,EAA4BtF,IAElEsG,EAAU3D,OACRrB,GACCZ,SAAoB,QAAV6E,EAAV7E,EAAYxH,gBAAQ,IAAAqM,GAAU,QAAVC,EAApBD,EAAsBpM,gBAAQ,IAAAqM,OAApB,EAAVA,EAAgCxF,IAAIS,SAAgB,QAAVgF,EAANhF,EAAQvH,gBAAQ,IAAAuM,GAAU,QAAVC,EAAhBD,EAAkBtM,gBAAQ,IAAAuM,OAApB,EAANA,EAA4B1F,GAAKU,EAAWrH,aAGnF,IAAMsN,EAAW,IAAI/I,MAAMiF,cAAcyD,GACzCpH,EAAayH,EAAU,IAAK,IAAK,EAAG,GACpCnH,EAAemH,GACf,IAAMvD,GAAW3C,SAAkB,QAAZkF,EAANlF,EAAQ4C,kBAAU,IAAAsC,GAAU,QAAVC,EAAlBD,EAAoBvC,gBAAQ,IAAAwC,OAAtB,EAANA,EAA8BxC,YAAY3C,SAAgB,QAAVoF,EAANpF,EAAQtK,gBAAQ,IAAA0P,GAAY,QAAZC,EAAhBD,EAAkBxC,kBAAU,IAAAyC,GAAU,QAAVC,EAA5BD,EAA8B1C,gBAAQ,IAAA2C,OAAhC,EAANA,EAAwC3C,UAC/F3C,EAAO6C,MACT7C,EAAO6C,KAAKC,SAAWoD,EACvBlG,EAAO6C,KAAKF,SAAWA,IAEvB3C,EAAO6C,KAAO,IAAI1F,MAAM6F,KAAKkD,EAAUvD,GACvC3C,EAAOiD,YAAY,WAAYjD,EAAO6C,MAE1C,CAGAvB,EAAS5J,EAAOH,aAAM,EAANA,EAAQS,OAAO,EAAOX,GACtCiK,EAAS5J,EAAOH,aAAM,EAANA,EAAQQ,SAAS,EAAMV,EACzC,E,gBC7OAD,EAAQ,I,GCDJ+O,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAa7R,QAGrB,IAAIC,EAASyR,EAAyBE,GAAY,CAGjD5R,QAAS,CAAC,GAOX,OAHA+R,EAAoBH,GAAU3R,EAAQA,EAAOD,QAAS2R,GAG/C1R,EAAOD,OACf,C,OCpBA2C,EAAQ,IACRA,EAAQ,KACRA,EAAQ,K","sources":["webpack://aframe-room-component/webpack/universalModuleDefinition","webpack://aframe-room-component/./src/components/ceiling.js","webpack://aframe-room-component/./src/components/doorhole.js","webpack://aframe-room-component/./src/components/doorlink.js","webpack://aframe-room-component/./src/components/floor.js","webpack://aframe-room-component/./src/components/index.js","webpack://aframe-room-component/./src/components/room.js","webpack://aframe-room-component/./src/components/sides.js","webpack://aframe-room-component/./src/components/wall.js","webpack://aframe-room-component/./src/primitives/a-ceiling.js","webpack://aframe-room-component/./src/primitives/a-doorhole.js","webpack://aframe-room-component/./src/primitives/a-doorlink.js","webpack://aframe-room-component/./src/primitives/a-floor.js","webpack://aframe-room-component/./src/primitives/a-room.js","webpack://aframe-room-component/./src/primitives/a-sides.js","webpack://aframe-room-component/./src/primitives/a-wall.js","webpack://aframe-room-component/./src/primitives/index.js","webpack://aframe-room-component/./src/systems/building.js","webpack://aframe-room-component/./src/systems/buildingService.js","webpack://aframe-room-component/./src/systems/index.js","webpack://aframe-room-component/webpack/bootstrap","webpack://aframe-room-component/./src/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, () => {\nreturn ","'use strict';\n\nconst DOORLINK = 'a-doorlink';\nconst ROOM = 'a-room';\n\nmodule.exports.Component = AFRAME.registerComponent('ceiling', {\n  init: function () {\n    const parentName = this.el.parentEl?.localName;\n    if (parentName !== DOORLINK && parentName !== ROOM) {\n      const message = `<a-ceiling> must be a child of a <${DOORLINK}> or <${ROOM}>.`;\n      throw new Error(message);\n    }\n  }\n});\n","'use strict';\n\nconst WALL = 'a-wall';\n\nmodule.exports.Component = AFRAME.registerComponent('doorhole', {\n  init: function () {\n    const parentName = this.el.parentEl?.localName;\n    if (parentName !== WALL) {\n      const message = `<a-doorhole> must be a child of a <${WALL}>.`;\n      throw new Error(message);\n    }\n\n    this.el.vertices = [];\n    this.el.getDoorlink = () => this.el.sceneEl.querySelector(`a-doorlink[from=\"#${this.el.id}\"], a-doorlink[to=\"#${this.el.id}\"]`);\n  }\n});\n","'use strict';\n\nconst SCENE = 'a-scene';\nconst WALL = 'a-wall';\n\nmodule.exports.Component = AFRAME.registerComponent('doorlink', {\n  schema: {\n    from: { type: 'selector' },\n    to: { type: 'selector' },\n    height: { type: 'number', default: 2.0 },\n    width: { type: 'number', default: 0.8 }\n  },\n  init: function () {\n    const parentName = this.el.parentEl?.localName;\n    if (parentName !== SCENE && parentName !== WALL) {\n      const message = `<a-doorlink> must be a child of a <${SCENE}> or <${WALL}>.`;\n      throw new Error(message);\n    }\n  },\n  update: function () {\n    this.el.sceneEl.systems?.building?.buildDoorlink(this.el);\n  }\n});\n","'use strict';\n\nconst DOORLINK = 'a-doorlink';\nconst ROOM = 'a-room';\n\nmodule.exports.Component = AFRAME.registerComponent('floor', {\n  init: function () {\n    const parentName = this.el.parentEl?.localName;\n    if (parentName !== DOORLINK && parentName !== ROOM) {\n      const message = `<a-floor> must be a child of a <${DOORLINK}> or <${ROOM}>.`;\n      throw new Error(message);\n    }\n  }\n});\n","'use strict';\n\nrequire('./ceiling');\nrequire('./doorhole');\nrequire('./doorlink');\nrequire('./floor');\nrequire('./room');\nrequire('./sides');\nrequire('./wall');\n","'use strict';\n\nmodule.exports.Component = AFRAME.registerComponent('room', {\n  schema: {\n    outside: { type: 'boolean' },\n    height: { type: 'number', default: 2.4 },\n    width: { type: 'number' },\n    length: { type: 'number' }\n  },\n  init: function () {\n    const roomEl = this.el;\n    const { length, width } = roomEl?.getAttribute('room');\n    const walls = Array.from(roomEl.querySelectorAll('a-wall'));\n\n    if ((width || length) && !(width && length)) {\n      const message = '<a-room> with WIDTH must also have LENGTH (and vice versa).';\n      console.error(message);\n      throw new Error(message);\n    }\n\n    if (width && length && walls.length !== 4) {\n      const message = '<a-room> with WIDTH and LENGTH must have four walls.';\n      console.error(message);\n      throw new Error(message);\n    }\n\n    roomEl.ceiling = roomEl.querySelector('a-ceiling');\n    roomEl.floor = roomEl.querySelector('a-floor');\n    roomEl.walls = walls;\n  },\n  update: function () {\n    this.el.sceneEl.systems?.building?.buildRoom(this.el);\n  }\n});\n","'use strict';\n\nconst DOORLINK = 'a-doorlink';\n\nmodule.exports.Component = AFRAME.registerComponent('sides', {\n  init: function () {\n    const parentName = this.el.parentEl?.localName;\n    if (parentName !== DOORLINK) {\n      const message = `<a-sides> must be a child of a <${DOORLINK}>.`;\n      throw new Error(message);\n    }\n  }\n});\n","'use strict';\n\nconst ROOM = 'a-room';\n\nmodule.exports.Component = AFRAME.registerComponent('wall', {\n  schema: {\n    height: { type: 'number' }\n  },\n  init: function () {\n    const parentName = this.el.parentEl?.localName;\n    if (parentName !== ROOM) {\n      const message = `<a-wall> must be a child of a <${ROOM}>`;\n      throw new Error(message);\n    }\n\n    const doorholes = Array.from(this.el.querySelectorAll('a-doorhole'));\n    this.el.doorholes = doorholes.sort((a, b) => a?.object3D?.position?.x - b?.object3D?.position?.x);\n\n    this.el.getHeight = () => this.el.getAttribute('wall')?.height || this.el.parentEl?.getAttribute('room')?.height;\n  }\n});\n","'use strict';\n\nAFRAME.registerPrimitive('a-ceiling', {\n  defaultComponents: { ceiling: {} },\n  mappings: {}\n});\n","'use strict';\n\nAFRAME.registerPrimitive('a-doorhole', {\n  defaultComponents: { doorhole: {} },\n  mappings: {}\n});\n","'use strict';\n\nAFRAME.registerPrimitive('a-doorlink', {\n  defaultComponents: { doorlink: {} },\n  mappings: {\n    from: 'doorlink.from',\n    to: 'doorlink.to',\n    height: 'doorlink.height',\n    width: 'doorlink.width'\n  }\n});\n","'use strict';\n\nAFRAME.registerPrimitive('a-floor', {\n  defaultComponents: { floor: {} },\n  mappings: {}\n});\n","'use strict';\n\nAFRAME.registerPrimitive('a-room', {\n  defaultComponents: { room: {} },\n  mappings: {\n    outside: 'room.outside',\n    height: 'room.height',\n    width: 'room.width',\n    length: 'room.length'\n  }\n});\n","'use strict';\n\nAFRAME.registerPrimitive('a-sides', {\n  defaultComponents: { sides: {} },\n  mappings: {}\n});\n","'use strict';\n\nAFRAME.registerPrimitive('a-wall', {\n  defaultComponents: { wall: {} },\n  mappings: {\n    height: 'wall.height'\n  }\n});\n","'use strict';\n\nrequire('./a-ceiling');\nrequire('./a-doorhole');\nrequire('./a-doorlink');\nrequire('./a-floor');\nrequire('./a-room');\nrequire('./a-sides');\nrequire('./a-wall');\n","'use strict';\n\nconst { buildDoorlink, buildRoom } = require('./buildingService');\n\nAFRAME.registerSystem('building', {\n  init: function () {\n    this.el.addEventListener('loaded', this.initialBuild);\n    this.el.updateReady = false;\n  },\n  initialBuild: function () {\n    const doorlinks = this.querySelectorAll('a-doorlink');\n    const rooms = this.querySelectorAll('a-room');\n\n    this.object3D.updateMatrixWorld();\n\n    for (const roomEl of rooms) {\n      buildRoom(roomEl);\n    }\n\n    for (const doorlinkEl of doorlinks) {\n      buildDoorlink(doorlinkEl);\n    }\n\n    this.updateReady = true;\n  },\n  buildRoom: function (roomEl) {\n    if (this.el.updateReady) buildRoom(roomEl);\n  },\n  buildDoorlink: function (doorlinkEl) {\n    if (this.el.updateReady) buildDoorlink(doorlinkEl);\n  }\n});\n","'use strict';\n\nconst HAIR = 0.0001;\n\nconst flipGeometry = (geom) => {\n  const indices = geom.getIndex().array;\n  for (let i = 0; i < indices.length; i += 3) {\n    const tempIndex = indices[i + 2];\n    indices[i + 2] = indices[i + 1];\n    indices[i + 1] = tempIndex;\n  }\n\n  geom.getIndex().needsUpdate = true;\n};\n\nconst makeGeometryUvs = (geom, callback) => {\n  const indices = geom.getIndex().array;\n  const uvs = [];\n  for (const vertexIndex of indices) {\n    const vertex = new THREE.Vector3(\n      geom.attributes.position.getX(vertexIndex),\n      geom.attributes.position.getY(vertexIndex),\n      geom.attributes.position.getZ(vertexIndex)\n    );\n\n    const [u, v] = callback(vertex, vertexIndex % 3);\n    uvs[vertexIndex * 2 + 0] = u;\n    uvs[vertexIndex * 2 + 1] = v;\n  }\n\n  geom.setAttribute('uv', new THREE.BufferAttribute(new Float32Array(uvs), 2));\n};\n\nconst makePlaneUvs = (geom, uKey, vKey, uMult, vMult) => {\n  const callback = (point) => ([point[uKey] * uMult, point[vKey] * vMult]);\n  makeGeometryUvs(geom, callback);\n};\n\nconst finishGeometry = (geom) => {\n  geom.computeVertexNormals();\n  // geom.computeBoundingBox();\n  // geom.computeBoundingSphere();\n};\n\nconst addDoorlinkWorldVertex = (vertex, doorlinkChildEl, positions) => {\n  const point = vertex.clone();\n  doorlinkChildEl.object3D.worldToLocal(point);\n  positions.push(point.x, point.y, point.z);\n};\n\nconst addDoorholeWorldVertex = (wall, doorhole, ptX, ptY) => {\n  const vertex = new THREE.Vector3(ptX, ptY, 0);\n  wall.object3D.localToWorld(vertex);\n  doorhole.vertices.push(vertex);\n};\n\nconst positionDoorhole = (doorholeEl) => {\n  const doorlinkEl = doorholeEl.getDoorlink();\n  const wallEl = doorholeEl.parentEl;\n  const nextWallEl = wallEl?.nextWallEl;\n  if (!doorlinkEl || !nextWallEl) { return; }\n\n  const wallWorldPosition = new THREE.Vector3();\n  wallEl.object3D.getWorldPosition(wallWorldPosition);\n\n  const nextWallWorldPosition = new THREE.Vector3();\n  nextWallEl.object3D.getWorldPosition(nextWallWorldPosition);\n\n  const doorlinkWorldPosition = new THREE.Vector3();\n  doorlinkEl.object3D.getWorldPosition(doorlinkWorldPosition);\n\n  const doorlinkGapX = doorlinkWorldPosition.x - wallWorldPosition.x;\n  const doorlinkGapZ = doorlinkWorldPosition.z - wallWorldPosition.z;\n\n  const wallGapX = nextWallWorldPosition.x - wallWorldPosition.x;\n  const wallGapZ = nextWallWorldPosition.z - wallWorldPosition.z;\n\n  const wallAngle = Math.atan2(wallGapZ, wallGapX);\n  const wallLength = Math.sqrt(wallGapX * wallGapX + wallGapZ * wallGapZ);\n\n  const doorHalf = doorlinkEl.getAttribute('doorlink')?.width / 2;\n\n  let localLinkX = doorlinkGapX * Math.cos(-wallAngle) - doorlinkGapZ * Math.sin(-wallAngle);\n  localLinkX = Math.max(localLinkX, doorHalf + HAIR);\n  localLinkX = Math.min(localLinkX, wallLength - doorHalf - HAIR);\n  // const localLinkZ = doorlinkGapX*Math.sin(-wallAngle) + doorlinkGapZ*Math.cos(-wallAngle);\n\n  doorholeEl.object3D.position.set(localLinkX, 0, 0);\n};\n\nconst sortWalls = (walls, isOutside) => {\n  let cwSum = 0;\n  for (let i = 0; i < walls.length; i++) {\n    const wallEl = walls[i];\n    const nextWallEl = walls[(i + 1) % walls.length];\n\n    const { x: wallX, z: wallZ } = wallEl.object3D.position;\n    const { x: nextWallX, z: nextWallZ } = nextWallEl.object3D.position;\n\n    cwSum += (nextWallX - wallX) * (nextWallZ + wallZ);\n  }\n\n  let shouldReverse = false;\n  if (cwSum > 0) { shouldReverse = !shouldReverse; }\n  if (isOutside) { shouldReverse = !shouldReverse; }\n  if (shouldReverse) { walls.reverse(); }\n};\n\nconst buildCap = (walls, cap, isCeiling, isOutside) => {\n  const shape = new THREE.Shape();\n  for (let i = 0; i < walls.length; i++) {\n    const wallEl = walls[i];\n    const ptX = wallEl.object3D.position.x;\n    const ptZ = wallEl.object3D.position.z;\n    if (i) {\n      shape.lineTo(ptX, ptZ);\n    } else {\n      shape.moveTo(ptX, ptZ);\n    }\n  }\n\n  const geom = new THREE.ShapeGeometry(shape);\n  for (let i = 0; i < walls.length; i++) {\n    const wallEl = walls[i];\n    const vertex = new THREE.Vector3(\n      geom.attributes.position.getX(i),\n      geom.attributes.position.getY(i),\n      geom.attributes.position.getZ(i)\n    );\n    vertex.set(vertex.x, wallEl.object3D.position.y, vertex.y);\n    if (isCeiling) { vertex.y += wallEl.getHeight(); }\n    geom.attributes.position.setXYZ(i, vertex.x, vertex.y, vertex.z);\n  }\n\n  let shouldReverse = false;\n  if (!isCeiling) { shouldReverse = !shouldReverse; }\n  if (isOutside) { shouldReverse = !shouldReverse; }\n  if (shouldReverse) { flipGeometry(geom); }\n\n  makePlaneUvs(geom, 'x', 'z', isCeiling ? 1 : -1, 1);\n  finishGeometry(geom);\n\n  const material = cap?.components?.material?.material || cap?.parentEl?.components?.material?.material;\n  if (cap.mesh) {\n    cap.mesh.geometry = geom;\n    cap.mesh.material = material;\n  } else {\n    const typeLabel = isCeiling ? 'ceiling' : 'floor';\n    cap.mesh = new THREE.Mesh(geom, material);\n    cap.setObject3D(typeLabel, cap.mesh);\n  }\n};\n\nconst buildRoom = (roomEl) => {\n  const { outside, length, width } = roomEl?.getAttribute('room');\n  const walls = roomEl?.walls;\n\n  if (width && length) {\n    walls[0].object3D.position.set(0, 0, 0);\n    walls[1].object3D.position.set(width, 0, 0);\n    walls[2].object3D.position.set(width, 0, length);\n    walls[3].object3D.position.set(0, 0, length);\n  }\n\n  sortWalls(walls, outside);\n\n  // build walls\n  for (let i = 0; i < walls.length; i++) {\n    const wallEl = walls[i];\n    const nextWallEl = wallEl.nextWallEl = walls[(i + 1) % walls.length];\n\n    const wallGapX = nextWallEl.object3D.position.x - wallEl.object3D.position.x;\n    const wallGapY = nextWallEl.object3D.position.y - wallEl.object3D.position.y;\n    const wallGapZ = nextWallEl.object3D.position.z - wallEl.object3D.position.z;\n\n    const heightGap = nextWallEl.getHeight() - wallEl.getHeight();\n    const wallAngle = Math.atan2(wallGapZ, wallGapX);\n    const wallLength = Math.sqrt(wallGapX * wallGapX + wallGapZ * wallGapZ);\n\n    wallEl.object3D.rotation.y = THREE.MathUtils.degToRad(-wallAngle / Math.PI * 180);\n\n    const wallShape = new THREE.Shape();\n    wallShape.moveTo(0, wallEl.getHeight());\n    wallShape.lineTo(0, 0);\n\n    // build doorholes\n    for (const doorholeEl of wallEl.doorholes) {\n      positionDoorhole(doorholeEl);\n\n      const doorlinkEl = doorholeEl.getDoorlink();\n      if (!doorlinkEl) { continue; }\n\n      for (let holeSide = -1; holeSide <= 1; holeSide += 2) {\n        const ptX = doorholeEl.object3D.position.x + doorlinkEl.getAttribute('doorlink').width / 2 * holeSide;\n        const floorY = (ptX / wallLength) * wallGapY;\n        let topY = floorY + doorlinkEl.getAttribute('doorlink').height;\n\n        const ceiling = wallEl.getHeight() + (ptX / wallLength) * heightGap;\n        const maxTopY = floorY + ceiling - HAIR; // will always be a seam\n        if (topY > maxTopY) { topY = maxTopY; }\n\n        addDoorholeWorldVertex(wallEl, doorholeEl, ptX, floorY);\n        addDoorholeWorldVertex(wallEl, doorholeEl, ptX, topY);\n\n        if (holeSide < 0) {\n          wallShape.lineTo(ptX, floorY);\n          wallShape.lineTo(ptX, topY);\n        } else {\n          wallShape.lineTo(ptX, topY);\n          wallShape.lineTo(ptX, floorY);\n        }\n      }\n    }\n\n    wallShape.lineTo(\n      wallLength,\n      nextWallEl?.object3D?.position?.y - wallEl?.object3D?.position?.y\n    );\n    wallShape.lineTo(\n      wallLength,\n      (nextWallEl?.object3D?.position?.y - wallEl?.object3D?.position?.y) + nextWallEl.getHeight()\n    );\n\n    const wallGeom = new THREE.ShapeGeometry(wallShape);\n    makePlaneUvs(wallGeom, 'x', 'y', 1, 1);\n    finishGeometry(wallGeom);\n    const material = wallEl?.components?.material?.material || wallEl?.parentEl?.components?.material?.material;\n    if (wallEl.mesh) {\n      wallEl.mesh.geometry = wallGeom;\n      wallEl.mesh.material = material;\n    } else {\n      wallEl.mesh = new THREE.Mesh(wallGeom, material);\n      wallEl.setObject3D('wallMesh', wallEl.mesh);\n    }\n  }\n\n  // build ceiling and floor\n  buildCap(walls, roomEl?.floor, false, outside);\n  buildCap(walls, roomEl?.ceiling, true, outside);\n};\n\nconst buildDoorlink = (doorlinkEl) => {\n  const { from, to } = doorlinkEl.getAttribute('doorlink');\n  const fromVerts = from?.vertices;\n  const toVerts = to?.vertices;\n  if (!fromVerts || !toVerts) { return; }\n\n  for (const doorlinkChildEl of doorlinkEl.children) {\n    const types = ['sides', 'floor', 'ceiling'];\n    for (const type of types) {\n      if (!doorlinkChildEl.components[type]) { continue; }\n\n      const material = doorlinkChildEl?.components?.material?.material || doorlinkChildEl?.parentEl?.components?.material?.material;\n\n      const indices = (type === 'sides') ? [0, 1, 2, 1, 3, 2, 4, 5, 6, 5, 7, 6] : [0, 1, 2, 1, 3, 2];\n      const geom = new THREE.BufferGeometry();\n      geom.setIndex(indices);\n\n      doorlinkChildEl.mesh = new THREE.Mesh(geom, material);\n      doorlinkChildEl.setObject3D(type, doorlinkChildEl.mesh);\n\n      const positions = [];\n\n      switch (type) {\n        case 'floor':\n          addDoorlinkWorldVertex(toVerts[0], doorlinkChildEl, positions);\n          addDoorlinkWorldVertex(toVerts[2], doorlinkChildEl, positions);\n          addDoorlinkWorldVertex(fromVerts[2], doorlinkChildEl, positions);\n          addDoorlinkWorldVertex(fromVerts[0], doorlinkChildEl, positions);\n\n          geom.setAttribute('position', new THREE.BufferAttribute(new Float32Array(positions), 3));\n\n          makeGeometryUvs(geom, (point, vertIndex) => ([1 - (vertIndex % 2), 1 - Math.floor(vertIndex / 2)]));\n\n          break;\n        case 'ceiling':\n          addDoorlinkWorldVertex(toVerts[3], doorlinkChildEl, positions);\n          addDoorlinkWorldVertex(toVerts[1], doorlinkChildEl, positions);\n          addDoorlinkWorldVertex(fromVerts[1], doorlinkChildEl, positions);\n          addDoorlinkWorldVertex(fromVerts[3], doorlinkChildEl, positions);\n\n          geom.setAttribute('position', new THREE.BufferAttribute(new Float32Array(positions), 3));\n\n          makeGeometryUvs(geom, (point, vertIndex) => ([vertIndex % 2, 1 - Math.floor(vertIndex / 2)]));\n\n          break;\n        case 'sides':\n          addDoorlinkWorldVertex(toVerts[2], doorlinkChildEl, positions);\n          addDoorlinkWorldVertex(toVerts[3], doorlinkChildEl, positions);\n          addDoorlinkWorldVertex(fromVerts[0], doorlinkChildEl, positions);\n          addDoorlinkWorldVertex(fromVerts[1], doorlinkChildEl, positions);\n\n          addDoorlinkWorldVertex(fromVerts[2], doorlinkChildEl, positions);\n          addDoorlinkWorldVertex(fromVerts[3], doorlinkChildEl, positions);\n          addDoorlinkWorldVertex(toVerts[0], doorlinkChildEl, positions);\n          addDoorlinkWorldVertex(toVerts[1], doorlinkChildEl, positions);\n\n          geom.setAttribute('position', new THREE.BufferAttribute(new Float32Array(positions), 3));\n\n          makeGeometryUvs(geom, (point, vertIndex) => {\n            const uv = [];\n            uv[0] = Math.floor(vertIndex / 2);\n            uv[1] = vertIndex % 2;\n            if (vertIndex < 4) { uv[0] = 1 - uv[0]; }\n            return uv;\n          });\n\n          break;\n      }\n\n      finishGeometry(geom);\n    }\n  }\n};\n\nmodule.exports = { buildDoorlink, buildRoom };\n","'use strict';\n\nrequire('./building');\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","'use strict';\n\nrequire('./components');\nrequire('./primitives');\nrequire('./systems');\n"],"names":["root","factory","exports","module","define","amd","a","i","self","DOORLINK","ROOM","Component","AFRAME","registerComponent","init","_this$el$parentEl","parentName","this","el","parentEl","localName","message","concat","Error","WALL","_this","vertices","getDoorlink","sceneEl","querySelector","id","SCENE","schema","from","type","to","height","default","width","update","_this$el$sceneEl$syst","_this$el$sceneEl$syst2","systems","building","buildDoorlink","require","outside","length","roomEl","_roomEl$getAttribute","getAttribute","walls","Array","querySelectorAll","console","error","ceiling","floor","buildRoom","doorholes","sort","b","_a$object3D","_a$object3D$position","_b$object3D","_b$object3D$position","object3D","position","x","getHeight","_this$el$getAttribute","_this$el$parentEl2","_this$el$parentEl2$ge","registerPrimitive","defaultComponents","mappings","doorhole","doorlink","room","sides","wall","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","isArray","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","test","_unsupportedIterableToArray","F","s","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","arr","len","arr2","_require","registerSystem","addEventListener","initialBuild","updateReady","doorlinks","rooms","updateMatrixWorld","_step","_iterator","_step2","_iterator2","doorlinkEl","_e3","HAIR","makeGeometryUvs","geom","callback","uvs","getIndex","array","vertexIndex","_callback2","THREE","Vector3","attributes","getX","getY","getZ","_arrayWithHoles","_i","_s","_x","_r","_arr","_n","_d","push","_iterableToArrayLimit","_nonIterableRest","u","v","setAttribute","BufferAttribute","Float32Array","makePlaneUvs","uKey","vKey","uMult","vMult","point","finishGeometry","computeVertexNormals","addDoorlinkWorldVertex","vertex","doorlinkChildEl","positions","clone","worldToLocal","y","z","addDoorholeWorldVertex","ptX","ptY","localToWorld","positionDoorhole","doorholeEl","_doorlinkEl$getAttrib","wallEl","nextWallEl","wallWorldPosition","getWorldPosition","nextWallWorldPosition","doorlinkWorldPosition","doorlinkGapX","doorlinkGapZ","wallGapX","wallGapZ","wallAngle","Math","atan2","wallLength","sqrt","doorHalf","localLinkX","cos","sin","max","min","set","buildCap","cap","isCeiling","isOutside","_cap$components","_cap$components$mater","_cap$parentEl","_cap$parentEl$compone","_cap$parentEl$compone2","shape","Shape","ptZ","lineTo","moveTo","ShapeGeometry","setXYZ","shouldReverse","indices","tempIndex","needsUpdate","flipGeometry","material","components","mesh","geometry","typeLabel","Mesh","setObject3D","_doorlinkEl$getAttrib2","fromVerts","toVerts","_step3","_iterator3","children","_i3","_types","_doorlinkChildEl$comp","_doorlinkChildEl$comp2","_doorlinkChildEl$pare","_doorlinkChildEl$pare2","_doorlinkChildEl$pare3","BufferGeometry","setIndex","vertIndex","uv","cwSum","_wallEl$object3D$posi","wallX","wallZ","_nextWallEl$object3D$","reverse","sortWalls","_nextWallEl$object3D","_nextWallEl$object3D$2","_wallEl$object3D","_wallEl$object3D$posi2","_nextWallEl$object3D2","_nextWallEl$object3D3","_wallEl$object3D2","_wallEl$object3D2$pos","_wallEl$components","_wallEl$components$ma","_wallEl$parentEl","_wallEl$parentEl$comp","_wallEl$parentEl$comp2","wallGapY","heightGap","rotation","MathUtils","degToRad","PI","wallShape","holeSide","floorY","topY","maxTopY","wallGeom","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__"],"sourceRoot":""}