{"version":3,"file":"aframe-room-component.min.js","mappings":"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","sources":["webpack://aframe-room-component/webpack/universalModuleDefinition","webpack://aframe-room-component/./src/components/ceiling.js","webpack://aframe-room-component/./src/components/doorhole.js","webpack://aframe-room-component/./src/components/doorlink.js","webpack://aframe-room-component/./src/components/floor.js","webpack://aframe-room-component/./src/components/index.js","webpack://aframe-room-component/./src/components/random-building.js","webpack://aframe-room-component/./src/components/room.js","webpack://aframe-room-component/./src/components/sides.js","webpack://aframe-room-component/./src/components/wall.js","webpack://aframe-room-component/./src/primitives/a-ceiling.js","webpack://aframe-room-component/./src/primitives/a-doorhole.js","webpack://aframe-room-component/./src/primitives/a-doorlink.js","webpack://aframe-room-component/./src/primitives/a-floor.js","webpack://aframe-room-component/./src/primitives/a-room.js","webpack://aframe-room-component/./src/primitives/a-sides.js","webpack://aframe-room-component/./src/primitives/a-wall.js","webpack://aframe-room-component/./src/primitives/index.js","webpack://aframe-room-component/./src/systems/building.js","webpack://aframe-room-component/./src/systems/buildingService.js","webpack://aframe-room-component/./src/systems/index.js","webpack://aframe-room-component/webpack/bootstrap","webpack://aframe-room-component/./src/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, () => {\nreturn ","'use strict';\n\nconst DOORLINK = 'a-doorlink';\nconst ROOM = 'a-room';\n\nmodule.exports.Component = AFRAME.registerComponent('ceiling', {\n  init: function () {\n    const parentName = this.el.parentEl?.localName;\n    if (parentName !== DOORLINK && parentName !== ROOM) {\n      const message = `<a-ceiling> must be a child of a <${DOORLINK}> or <${ROOM}>.`;\n      throw new Error(message);\n    }\n  }\n});\n","'use strict';\n\nconst WALL = 'a-wall';\n\nmodule.exports.Component = AFRAME.registerComponent('doorhole', {\n  init: function () {\n    const parentName = this.el.parentEl?.localName;\n    if (parentName !== WALL) {\n      const message = `<a-doorhole> must be a child of a <${WALL}>.`;\n      throw new Error(message);\n    }\n\n    this.el.vertices = [];\n    this.el.getDoorlink = () => this.el.sceneEl.querySelector(`a-doorlink[from=\"#${this.el.id}\"], a-doorlink[to=\"#${this.el.id}\"]`);\n  }\n});\n","'use strict';\n\nconst SCENE = 'a-scene';\nconst WALL = 'a-wall';\n\nmodule.exports.Component = AFRAME.registerComponent('doorlink', {\n  schema: {\n    from: { type: 'selector' },\n    to: { type: 'selector' },\n    height: { type: 'number', default: 2.0 },\n    width: { type: 'number', default: 0.8 }\n  },\n  init: function () {\n    const parentName = this.el.parentEl?.localName;\n    if (parentName !== SCENE && parentName !== WALL) {\n      const message = `<a-doorlink> must be a child of a <${SCENE}> or <${WALL}>.`;\n      throw new Error(message);\n    }\n  },\n  update: function () {\n    this.el.sceneEl.systems?.building?.buildDoorlink(this.el);\n  }\n});\n","'use strict';\n\nconst DOORLINK = 'a-doorlink';\nconst ROOM = 'a-room';\n\nmodule.exports.Component = AFRAME.registerComponent('floor', {\n  init: function () {\n    const parentName = this.el.parentEl?.localName;\n    if (parentName !== DOORLINK && parentName !== ROOM) {\n      const message = `<a-floor> must be a child of a <${DOORLINK}> or <${ROOM}>.`;\n      throw new Error(message);\n    }\n  }\n});\n","'use strict';\n\nrequire('./ceiling');\nrequire('./doorhole');\nrequire('./doorlink');\nrequire('./floor');\nrequire('./random-building');\nrequire('./room');\nrequire('./sides');\nrequire('./wall');\n","'use strict';\n\nmodule.exports.Component = AFRAME.registerComponent('random-building', {\n  schema: {\n    minRoomSize: { type: 'vec3', default: { x: 2, y: 2, z: 2 } },\n    maxRoomSize: { type: 'vec3', default: { x: 3, y: 4, z: 3 } },\n    minRooms: { type: 'int', default: 1 },\n    maxRooms: { type: 'int', default: 5 },\n    boundary: { type: 'vec3', default: { x: 20, y: 0, z: 20 } },\n    maxPositionAttempts: { type: 'int', default: 50 }\n  },\n\n  init: function () {\n    this.generateBuilding();\n  },\n\n  generateBuilding: function () {\n    const { minRoomSize, maxRoomSize, minRooms, maxRooms, boundary, maxPositionAttempts } = this.data;\n\n    const numRooms = Math.floor(Math.random() * (maxRooms - minRooms + 1) + minRooms);\n    const rooms = [];\n\n    let positionAttempts = 0;\n    for (let i = 0; i < numRooms && positionAttempts != maxPositionAttempts; i++) {\n      const roomSize = {\n        x: Math.random() * (maxRoomSize.x - minRoomSize.x) + minRoomSize.x,\n        y: Math.random() * (maxRoomSize.y - minRoomSize.y) + minRoomSize.y,\n        z: Math.random() * (maxRoomSize.z - minRoomSize.z) + minRoomSize.z\n      };\n\n      for (positionAttempts = 0; positionAttempts < maxPositionAttempts; positionAttempts++) {\n        const roomPosition = {\n          x: Math.random() * boundary.x,\n          y: 0,\n          z: Math.random() * boundary.z\n        };\n\n        const collision = this.checkCollision(roomPosition, roomSize, rooms);\n        if (!collision) {\n          const newRoom = this.createRoom(roomSize, roomPosition);\n          rooms.push(newRoom);\n          this.el.appendChild(newRoom.room);\n          break;\n        } else {\n          roomSize.x = Math.max(minRoomSize.x, roomSize.x * 0.9);\n          roomSize.z = Math.max(minRoomSize.z, roomSize.z * 0.9);\n        }\n      }\n    }\n  },\n\n  checkCollision: function (roomPosition, roomSize, rooms) {\n    for (const otherRoom of rooms) {\n      const xOverlap = Math.abs(roomPosition.x - otherRoom.position.x) < (roomSize.x + otherRoom.size.x) / 2;\n      const zOverlap = Math.abs(roomPosition.z - otherRoom.position.z) < (roomSize.z + otherRoom.size.z) / 2;\n\n      if (xOverlap && zOverlap) {\n        return true;\n      }\n    }\n\n    return false;\n  },\n\n  createRoom: function (roomSize, roomPosition) {\n    const room = document.createElement('a-entity');\n    room.setAttribute('geometry', {\n      primitive: 'box',\n      width: roomSize.x,\n      height: roomSize.y,\n      depth: roomSize.z\n    });\n    room.setAttribute('position', roomPosition);\n\n    return { room: room, position: roomPosition, size: roomSize };\n  }\n});\n","'use strict';\n\nmodule.exports.Component = AFRAME.registerComponent('room', {\n  schema: {\n    outside: { type: 'boolean' },\n    height: { type: 'number', default: 2.4 },\n    width: { type: 'number' },\n    length: { type: 'number' }\n  },\n  init: function () {\n    const roomEl = this.el;\n    const { length, width } = roomEl?.getAttribute('room');\n    const walls = Array.from(roomEl.querySelectorAll('a-wall'));\n\n    if ((width || length) && !(width && length)) {\n      const message = '<a-room> with WIDTH must also have LENGTH (and vice versa).';\n      console.error(message);\n      throw new Error(message);\n    }\n\n    if (width && length && walls.length !== 4) {\n      const message = '<a-room> with WIDTH and LENGTH must have four walls.';\n      console.error(message);\n      throw new Error(message);\n    }\n\n    roomEl.ceiling = roomEl.querySelector('a-ceiling');\n    roomEl.floor = roomEl.querySelector('a-floor');\n    roomEl.walls = walls;\n  },\n  update: function () {\n    this.el.sceneEl.systems?.building?.buildRoom(this.el);\n  }\n});\n","'use strict';\n\nconst DOORLINK = 'a-doorlink';\n\nmodule.exports.Component = AFRAME.registerComponent('sides', {\n  init: function () {\n    const parentName = this.el.parentEl?.localName;\n    if (parentName !== DOORLINK) {\n      const message = `<a-sides> must be a child of a <${DOORLINK}>.`;\n      throw new Error(message);\n    }\n  }\n});\n","'use strict';\n\nconst ROOM = 'a-room';\n\nmodule.exports.Component = AFRAME.registerComponent('wall', {\n  schema: {\n    height: { type: 'number' }\n  },\n  init: function () {\n    const parentName = this.el.parentEl?.localName;\n    if (parentName !== ROOM) {\n      const message = `<a-wall> must be a child of a <${ROOM}>`;\n      throw new Error(message);\n    }\n\n    const doorholes = Array.from(this.el.querySelectorAll('a-doorhole'));\n    this.el.doorholes = doorholes.sort((a, b) => a?.object3D?.position?.x - b?.object3D?.position?.x);\n\n    this.el.getHeight = () => this.el.getAttribute('wall')?.height || this.el.parentEl?.getAttribute('room')?.height;\n  }\n});\n","'use strict';\n\nAFRAME.registerPrimitive('a-ceiling', {\n  defaultComponents: { ceiling: {} },\n  mappings: {}\n});\n","'use strict';\n\nAFRAME.registerPrimitive('a-doorhole', {\n  defaultComponents: { doorhole: {} },\n  mappings: {}\n});\n","'use strict';\n\nAFRAME.registerPrimitive('a-doorlink', {\n  defaultComponents: { doorlink: {} },\n  mappings: {\n    from: 'doorlink.from',\n    to: 'doorlink.to',\n    height: 'doorlink.height',\n    width: 'doorlink.width'\n  }\n});\n","'use strict';\n\nAFRAME.registerPrimitive('a-floor', {\n  defaultComponents: { floor: {} },\n  mappings: {}\n});\n","'use strict';\n\nAFRAME.registerPrimitive('a-room', {\n  defaultComponents: { room: {} },\n  mappings: {\n    outside: 'room.outside',\n    height: 'room.height',\n    width: 'room.width',\n    length: 'room.length'\n  }\n});\n","'use strict';\n\nAFRAME.registerPrimitive('a-sides', {\n  defaultComponents: { sides: {} },\n  mappings: {}\n});\n","'use strict';\n\nAFRAME.registerPrimitive('a-wall', {\n  defaultComponents: { wall: {} },\n  mappings: {\n    height: 'wall.height'\n  }\n});\n","'use strict';\n\nrequire('./a-ceiling');\nrequire('./a-doorhole');\nrequire('./a-doorlink');\nrequire('./a-floor');\nrequire('./a-room');\nrequire('./a-sides');\nrequire('./a-wall');\n","'use strict';\n\nconst { buildDoorlink, buildRoom } = require('./buildingService');\n\nmodule.exports.System = AFRAME.registerSystem('building', {\n  init: function () {\n    this.el.addEventListener('loaded', this.initialBuild);\n    this.el.updateReady = false;\n  },\n  initialBuild: function () {\n    const doorlinks = this.querySelectorAll('a-doorlink');\n    const rooms = this.querySelectorAll('a-room');\n\n    this.object3D.updateMatrixWorld();\n\n    for (const roomEl of rooms) {\n      buildRoom(roomEl);\n    }\n\n    for (const doorlinkEl of doorlinks) {\n      buildDoorlink(doorlinkEl);\n    }\n\n    this.updateReady = true;\n  },\n  buildRoom: function (roomEl) {\n    if (this.el.updateReady) buildRoom(roomEl);\n  },\n  buildDoorlink: function (doorlinkEl) {\n    if (this.el.updateReady) buildDoorlink(doorlinkEl);\n  }\n});\n","'use strict';\n\nconst HAIR = 0.0001;\n\nconst flipGeometry = (geom) => {\n  const indices = geom.getIndex().array;\n  for (let i = 0; i < indices.length; i += 3) {\n    const tempIndex = indices[i + 2];\n    indices[i + 2] = indices[i + 1];\n    indices[i + 1] = tempIndex;\n  }\n\n  geom.getIndex().needsUpdate = true;\n};\n\nconst makeGeometryUvs = (geom, callback) => {\n  const indices = geom.getIndex().array;\n  const uvs = [];\n  for (const vertexIndex of indices) {\n    const vertex = new THREE.Vector3(\n      geom.attributes.position.getX(vertexIndex),\n      geom.attributes.position.getY(vertexIndex),\n      geom.attributes.position.getZ(vertexIndex)\n    );\n\n    const [u, v] = callback(vertex, vertexIndex % 3);\n    uvs[vertexIndex * 2 + 0] = u;\n    uvs[vertexIndex * 2 + 1] = v;\n  }\n\n  geom.setAttribute('uv', new THREE.BufferAttribute(new Float32Array(uvs), 2));\n};\n\nconst makePlaneUvs = (geom, uKey, vKey, uMult, vMult) => {\n  const callback = (point) => ([point[uKey] * uMult, point[vKey] * vMult]);\n  makeGeometryUvs(geom, callback);\n};\n\nconst finishGeometry = (geom) => {\n  geom.computeVertexNormals();\n  // geom.computeBoundingBox();\n  // geom.computeBoundingSphere();\n};\n\nconst addDoorlinkWorldVertex = (vertex, doorlinkChildEl, positions) => {\n  const point = vertex.clone();\n  doorlinkChildEl.object3D.worldToLocal(point);\n  positions.push(point.x, point.y, point.z);\n};\n\nconst addDoorholeWorldVertex = (wall, doorhole, ptX, ptY) => {\n  const vertex = new THREE.Vector3(ptX, ptY, 0);\n  wall.object3D.localToWorld(vertex);\n  doorhole.vertices.push(vertex);\n};\n\nconst positionDoorhole = (doorholeEl) => {\n  const doorlinkEl = doorholeEl.getDoorlink();\n  const wallEl = doorholeEl.parentEl;\n  const nextWallEl = wallEl?.nextWallEl;\n  if (!doorlinkEl || !nextWallEl) { return; }\n\n  const wallWorldPosition = new THREE.Vector3();\n  wallEl.object3D.getWorldPosition(wallWorldPosition);\n\n  const nextWallWorldPosition = new THREE.Vector3();\n  nextWallEl.object3D.getWorldPosition(nextWallWorldPosition);\n\n  const doorlinkWorldPosition = new THREE.Vector3();\n  doorlinkEl.object3D.getWorldPosition(doorlinkWorldPosition);\n\n  const doorlinkGapX = doorlinkWorldPosition.x - wallWorldPosition.x;\n  const doorlinkGapZ = doorlinkWorldPosition.z - wallWorldPosition.z;\n\n  const wallGapX = nextWallWorldPosition.x - wallWorldPosition.x;\n  const wallGapZ = nextWallWorldPosition.z - wallWorldPosition.z;\n\n  const wallAngle = Math.atan2(wallGapZ, wallGapX);\n  const wallLength = Math.sqrt(wallGapX * wallGapX + wallGapZ * wallGapZ);\n\n  const doorHalf = doorlinkEl.getAttribute('doorlink')?.width / 2;\n\n  let localLinkX = doorlinkGapX * Math.cos(-wallAngle) - doorlinkGapZ * Math.sin(-wallAngle);\n  localLinkX = Math.max(localLinkX, doorHalf + HAIR);\n  localLinkX = Math.min(localLinkX, wallLength - doorHalf - HAIR);\n  // const localLinkZ = doorlinkGapX*Math.sin(-wallAngle) + doorlinkGapZ*Math.cos(-wallAngle);\n\n  doorholeEl.object3D.position.set(localLinkX, 0, 0);\n};\n\nconst sortWalls = (walls, isOutside) => {\n  let cwSum = 0;\n  for (let i = 0; i < walls.length; i++) {\n    const wallEl = walls[i];\n    const nextWallEl = walls[(i + 1) % walls.length];\n\n    const { x: wallX, z: wallZ } = wallEl.object3D.position;\n    const { x: nextWallX, z: nextWallZ } = nextWallEl.object3D.position;\n\n    cwSum += (nextWallX - wallX) * (nextWallZ + wallZ);\n  }\n\n  let shouldReverse = false;\n  if (cwSum > 0) { shouldReverse = !shouldReverse; }\n  if (isOutside) { shouldReverse = !shouldReverse; }\n  if (shouldReverse) { walls.reverse(); }\n};\n\nconst buildCap = (walls, cap, isCeiling, isOutside) => {\n  const shape = new THREE.Shape();\n  for (let i = 0; i < walls.length; i++) {\n    const wallEl = walls[i];\n    const ptX = wallEl.object3D.position.x;\n    const ptZ = wallEl.object3D.position.z;\n    if (i) {\n      shape.lineTo(ptX, ptZ);\n    } else {\n      shape.moveTo(ptX, ptZ);\n    }\n  }\n\n  const geom = new THREE.ShapeGeometry(shape);\n  for (let i = 0; i < walls.length; i++) {\n    const wallEl = walls[i];\n    const vertex = new THREE.Vector3(\n      geom.attributes.position.getX(i),\n      geom.attributes.position.getY(i),\n      geom.attributes.position.getZ(i)\n    );\n    vertex.set(vertex.x, wallEl.object3D.position.y, vertex.y);\n    if (isCeiling) { vertex.y += wallEl.getHeight(); }\n    geom.attributes.position.setXYZ(i, vertex.x, vertex.y, vertex.z);\n  }\n\n  let shouldReverse = false;\n  if (!isCeiling) { shouldReverse = !shouldReverse; }\n  if (isOutside) { shouldReverse = !shouldReverse; }\n  if (shouldReverse) { flipGeometry(geom); }\n\n  makePlaneUvs(geom, 'x', 'z', isCeiling ? 1 : -1, 1);\n  finishGeometry(geom);\n\n  const material = cap?.components?.material?.material || cap?.parentEl?.components?.material?.material;\n  if (cap.mesh) {\n    cap.mesh.geometry = geom;\n    cap.mesh.material = material;\n  } else {\n    const typeLabel = isCeiling ? 'ceiling' : 'floor';\n    cap.mesh = new THREE.Mesh(geom, material);\n    cap.setObject3D(typeLabel, cap.mesh);\n  }\n};\n\nconst buildRoom = (roomEl) => {\n  const { outside, length, width } = roomEl?.getAttribute('room');\n  const walls = roomEl?.walls;\n\n  if (width && length) {\n    walls[0].object3D.position.set(0, 0, 0);\n    walls[1].object3D.position.set(width, 0, 0);\n    walls[2].object3D.position.set(width, 0, length);\n    walls[3].object3D.position.set(0, 0, length);\n  }\n\n  sortWalls(walls, outside);\n\n  // build walls\n  for (let i = 0; i < walls.length; i++) {\n    const wallEl = walls[i];\n    const nextWallEl = wallEl.nextWallEl = walls[(i + 1) % walls.length];\n\n    const wallGapX = nextWallEl.object3D.position.x - wallEl.object3D.position.x;\n    const wallGapY = nextWallEl.object3D.position.y - wallEl.object3D.position.y;\n    const wallGapZ = nextWallEl.object3D.position.z - wallEl.object3D.position.z;\n\n    const heightGap = nextWallEl.getHeight() - wallEl.getHeight();\n    const wallAngle = Math.atan2(wallGapZ, wallGapX);\n    const wallLength = Math.sqrt(wallGapX * wallGapX + wallGapZ * wallGapZ);\n\n    wallEl.object3D.rotation.y = THREE.MathUtils.degToRad(-wallAngle / Math.PI * 180);\n\n    const wallShape = new THREE.Shape();\n    wallShape.moveTo(0, wallEl.getHeight());\n    wallShape.lineTo(0, 0);\n\n    // build doorholes\n    for (const doorholeEl of wallEl.doorholes) {\n      positionDoorhole(doorholeEl);\n\n      const doorlinkEl = doorholeEl.getDoorlink();\n      if (!doorlinkEl) { continue; }\n\n      for (let holeSide = -1; holeSide <= 1; holeSide += 2) {\n        const ptX = doorholeEl.object3D.position.x + doorlinkEl.getAttribute('doorlink').width / 2 * holeSide;\n        const floorY = (ptX / wallLength) * wallGapY;\n        let topY = floorY + doorlinkEl.getAttribute('doorlink').height;\n\n        const ceiling = wallEl.getHeight() + (ptX / wallLength) * heightGap;\n        const maxTopY = floorY + ceiling - HAIR; // will always be a seam\n        if (topY > maxTopY) { topY = maxTopY; }\n\n        addDoorholeWorldVertex(wallEl, doorholeEl, ptX, floorY);\n        addDoorholeWorldVertex(wallEl, doorholeEl, ptX, topY);\n\n        if (holeSide < 0) {\n          wallShape.lineTo(ptX, floorY);\n          wallShape.lineTo(ptX, topY);\n        } else {\n          wallShape.lineTo(ptX, topY);\n          wallShape.lineTo(ptX, floorY);\n        }\n      }\n    }\n\n    wallShape.lineTo(\n      wallLength,\n      nextWallEl?.object3D?.position?.y - wallEl?.object3D?.position?.y\n    );\n    wallShape.lineTo(\n      wallLength,\n      (nextWallEl?.object3D?.position?.y - wallEl?.object3D?.position?.y) + nextWallEl.getHeight()\n    );\n\n    const wallGeom = new THREE.ShapeGeometry(wallShape);\n    makePlaneUvs(wallGeom, 'x', 'y', 1, 1);\n    finishGeometry(wallGeom);\n    const material = wallEl?.components?.material?.material || wallEl?.parentEl?.components?.material?.material;\n    if (wallEl.mesh) {\n      wallEl.mesh.geometry = wallGeom;\n      wallEl.mesh.material = material;\n    } else {\n      wallEl.mesh = new THREE.Mesh(wallGeom, material);\n      wallEl.setObject3D('wallMesh', wallEl.mesh);\n    }\n  }\n\n  // build ceiling and floor\n  buildCap(walls, roomEl?.floor, false, outside);\n  buildCap(walls, roomEl?.ceiling, true, outside);\n};\n\nconst buildDoorlink = (doorlinkEl) => {\n  const { from, to } = doorlinkEl.getAttribute('doorlink');\n  const fromVerts = from?.vertices;\n  const toVerts = to?.vertices;\n  if (!fromVerts || !toVerts) { return; }\n\n  for (const doorlinkChildEl of doorlinkEl.children) {\n    const types = ['sides', 'floor', 'ceiling'];\n    for (const type of types) {\n      if (!doorlinkChildEl.components[type]) { continue; }\n\n      const material = doorlinkChildEl?.components?.material?.material || doorlinkChildEl?.parentEl?.components?.material?.material;\n\n      const indices = (type === 'sides') ? [0, 1, 2, 1, 3, 2, 4, 5, 6, 5, 7, 6] : [0, 1, 2, 1, 3, 2];\n      const geom = new THREE.BufferGeometry();\n      geom.setIndex(indices);\n\n      doorlinkChildEl.mesh = new THREE.Mesh(geom, material);\n      doorlinkChildEl.setObject3D(type, doorlinkChildEl.mesh);\n\n      const positions = [];\n\n      switch (type) {\n        case 'floor':\n          addDoorlinkWorldVertex(toVerts[0], doorlinkChildEl, positions);\n          addDoorlinkWorldVertex(toVerts[2], doorlinkChildEl, positions);\n          addDoorlinkWorldVertex(fromVerts[2], doorlinkChildEl, positions);\n          addDoorlinkWorldVertex(fromVerts[0], doorlinkChildEl, positions);\n\n          geom.setAttribute('position', new THREE.BufferAttribute(new Float32Array(positions), 3));\n\n          makeGeometryUvs(geom, (point, vertIndex) => ([1 - (vertIndex % 2), 1 - Math.floor(vertIndex / 2)]));\n\n          break;\n        case 'ceiling':\n          addDoorlinkWorldVertex(toVerts[3], doorlinkChildEl, positions);\n          addDoorlinkWorldVertex(toVerts[1], doorlinkChildEl, positions);\n          addDoorlinkWorldVertex(fromVerts[1], doorlinkChildEl, positions);\n          addDoorlinkWorldVertex(fromVerts[3], doorlinkChildEl, positions);\n\n          geom.setAttribute('position', new THREE.BufferAttribute(new Float32Array(positions), 3));\n\n          makeGeometryUvs(geom, (point, vertIndex) => ([vertIndex % 2, 1 - Math.floor(vertIndex / 2)]));\n\n          break;\n        case 'sides':\n          addDoorlinkWorldVertex(toVerts[2], doorlinkChildEl, positions);\n          addDoorlinkWorldVertex(toVerts[3], doorlinkChildEl, positions);\n          addDoorlinkWorldVertex(fromVerts[0], doorlinkChildEl, positions);\n          addDoorlinkWorldVertex(fromVerts[1], doorlinkChildEl, positions);\n\n          addDoorlinkWorldVertex(fromVerts[2], doorlinkChildEl, positions);\n          addDoorlinkWorldVertex(fromVerts[3], doorlinkChildEl, positions);\n          addDoorlinkWorldVertex(toVerts[0], doorlinkChildEl, positions);\n          addDoorlinkWorldVertex(toVerts[1], doorlinkChildEl, positions);\n\n          geom.setAttribute('position', new THREE.BufferAttribute(new Float32Array(positions), 3));\n\n          makeGeometryUvs(geom, (point, vertIndex) => {\n            const uv = [];\n            uv[0] = Math.floor(vertIndex / 2);\n            uv[1] = vertIndex % 2;\n            if (vertIndex < 4) { uv[0] = 1 - uv[0]; }\n            return uv;\n          });\n\n          break;\n      }\n\n      finishGeometry(geom);\n    }\n  }\n};\n\nmodule.exports = { buildDoorlink, buildRoom };\n","'use strict';\n\nrequire('./building');\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","'use strict';\n\nrequire('./components');\nrequire('./primitives');\nrequire('./systems');\n"],"names":["root","factory","exports","module","define","amd","a","i","self","DOORLINK","ROOM","Component","AFRAME","registerComponent","init","_this$el$parentEl","parentName","this","el","parentEl","localName","message","concat","Error","WALL","_this","vertices","getDoorlink","sceneEl","querySelector","id","SCENE","schema","from","type","to","height","default","width","update","_this$el$sceneEl$syst","systems","building","buildDoorlink","require","_arrayLikeToArray","arr","len","length","arr2","Array","minRoomSize","x","y","z","maxRoomSize","minRooms","maxRooms","boundary","maxPositionAttempts","generateBuilding","_this$data","data","numRooms","Math","floor","random","rooms","positionAttempts","roomSize","roomPosition","checkCollision","newRoom","createRoom","push","appendChild","room","max","_step","_iterator","o","allowArrayLike","it","Symbol","iterator","isArray","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_unsupportedIterableToArray","F","s","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","_createForOfIteratorHelper","otherRoom","xOverlap","abs","position","size","zOverlap","document","createElement","setAttribute","primitive","depth","outside","roomEl","_roomEl$getAttribute","getAttribute","walls","querySelectorAll","console","error","ceiling","buildRoom","doorholes","sort","b","_a$object3D","_b$object3D","object3D","getHeight","_this$el$getAttribute","_this$el$parentEl2","registerPrimitive","defaultComponents","mappings","doorhole","doorlink","sides","wall","_require","System","registerSystem","addEventListener","initialBuild","updateReady","doorlinks","updateMatrixWorld","_step2","_iterator2","doorlinkEl","HAIR","makeGeometryUvs","geom","callback","uvs","getIndex","array","vertexIndex","_callback2","THREE","Vector3","attributes","getX","getY","getZ","_arrayWithHoles","r","l","t","u","_iterableToArrayLimit","_nonIterableRest","v","BufferAttribute","Float32Array","makePlaneUvs","uKey","vKey","uMult","vMult","point","finishGeometry","computeVertexNormals","addDoorlinkWorldVertex","vertex","doorlinkChildEl","positions","clone","worldToLocal","addDoorholeWorldVertex","ptX","ptY","localToWorld","positionDoorhole","doorholeEl","_doorlinkEl$getAttrib","wallEl","nextWallEl","wallWorldPosition","getWorldPosition","nextWallWorldPosition","doorlinkWorldPosition","doorlinkGapX","doorlinkGapZ","wallGapX","wallGapZ","wallAngle","atan2","wallLength","sqrt","doorHalf","localLinkX","cos","sin","min","set","buildCap","cap","isCeiling","isOutside","_cap$components","_cap$parentEl","shape","Shape","ptZ","lineTo","moveTo","ShapeGeometry","setXYZ","shouldReverse","indices","tempIndex","needsUpdate","flipGeometry","material","components","mesh","geometry","typeLabel","Mesh","setObject3D","_doorlinkEl$getAttrib2","fromVerts","toVerts","_step3","_iterator3","children","_i2","_types","_doorlinkChildEl$comp","_doorlinkChildEl$pare","BufferGeometry","setIndex","vertIndex","uv","cwSum","_wallEl$object3D$posi","wallX","wallZ","_nextWallEl$object3D$","reverse","sortWalls","_nextWallEl$object3D","_wallEl$object3D","_nextWallEl$object3D2","_wallEl$object3D2","_wallEl$components","_wallEl$parentEl","wallGapY","heightGap","rotation","MathUtils","degToRad","PI","wallShape","holeSide","floorY","topY","maxTopY","wallGeom","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__"],"sourceRoot":""}